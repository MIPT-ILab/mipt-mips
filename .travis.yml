notifications:
  email: false

language: cpp
dist: focal
osx_image: xcode12

branches:
  only:
  - master

compiler:
  - gcc
  - clang

os:
  - linux
  - osx

arch:
  - amd64
  - arm64

env:
  - TRAVIS_BUILD_TYPE=Release
  - TRAVIS_BUILD_TYPE=Coverage
  - TRAVIS_BUILD_TYPE=Profile

matrix:
  exclude:
    - os: osx
      compiler: gcc
    - os: osx
      arch: arm64
    - compiler: gcc
      env: TRAVIS_BUILD_TYPE=Coverage
    - os: osx
      env: TRAVIS_BUILD_TYPE=Profile

addons:
  apt:
    sources:
    - sourceline: "deb https://apt.kitware.com/ubuntu/ focal main"
      key_url: "https://apt.kitware.com/keys/kitware-archive-latest.asc"
    - sourceline: 'ppa:ubuntu-toolchain-r/test'
    update: true
    packages:
    - clang-tidy-10
    - clang++-10
    - cmake
    - g++-10
    - libboost-dev
    - ninja-build
  homebrew:
    packages:
    - ninja
    update: true

before_install:
  - |
    if [ "$TRAVIS_BUILD_TYPE" == "Release" ]; then
        CMAKE_FLAGS="-DCMAKE_BUILD_TYPE=Release -DENABLE_IPO=1"
        if [ $TRAVIS_CPU_ARCH == amd64 ] && [ "$TRAVIS_OS_NAME" == "linux" ]; then
            GDB_VER=gdb-10.1
        fi
    elif [ "$TRAVIS_BUILD_TYPE" == "Coverage" ]; then
        CMAKE_FLAGS="-DCMAKE_BUILD_TYPE=Debug -DENABLE_COVERAGE=1 -DENABLE_ASAN=0 -DENABLE_UBSAN=0"
        COV="gcov"
        if [ $CXX == clang++ ] && [ "$TRAVIS_OS_NAME" == "linux" ] ; then
            COV="llvm-cov gcov"
            if [ $TRAVIS_CPU_ARCH == amd64 ]; then TRAVIS_TIDY=1; fi
        fi
    else # Profile
        CMAKE_FLAGS="-DCMAKE_BUILD_TYPE=Release -DENABLE_IPO=1 -DENABLE_PROFILE=1"
        TRAVIS_GPROF=1
    fi

install:
  - | # Update compilers
    TRAVIS_CMAKE=cmake
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
       sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 40
       sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 40
       sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-10 40
       if [ $CXX == clang++ ]; then
          export CXX=clang++-10
          export CC=clang-10
       fi
       TRAVIS_CMAKE=/usr/bin/cmake
    fi
  - | # Download GDB
    if [ $GDB_VER ]; then
       GDB_DIR=$TRAVIS_BUILD_DIR/$GDB_VER
       GDB_BUILD=$TRAVIS_BUILD_DIR/gdb_build
       cd $TRAVIS_BUILD_DIR
       mkdir gdb_build
       wget http://ftp.gnu.org/gnu/gdb/$GDB_VER.tar.gz
       tar -xzf $GDB_VER.tar.gz
    fi

before_script:
  - cd $TRAVIS_BUILD_DIR/simulator       && mkdir build
  - cd $TRAVIS_BUILD_DIR/simulator/build && $TRAVIS_CMAKE .. $CMAKE_FLAGS -DGDB_SOURCE_PATH=$GDB_DIR -DGDB_BUILD_PATH=$GDB_BUILD -G "Ninja"
  - |
    if [ $GDB_VER ]; then
        cd $GDB_BUILD && $GDB_DIR/configure --target=mipsel-unknown-linux --with-system-zlib --with-python=no
        cd $GDB_BUILD && make configure-gdb CFLAGS='-w -O0' CXXFLAGS='-w -O0' MAKEINFO=true > /dev/null
        cd $GDB_BUILD && mkdir opcodes      && cd opcodes      && $GDB_DIR/opcodes/configure --target=mipsel-unknown-linux && make libopcodes.a
        cd $GDB_BUILD && mkdir libdecnumber && cd libdecnumber && $GDB_DIR/libdecnumber/configure && make libdecnumber.a
        cd $GDB_BUILD && mkdir readline     && cd readline     && $GDB_DIR/readline/configure && cd readline && make libreadline.a
        cd $GDB_BUILD && mkdir libctf       && cd libctf       && $GDB_DIR/libctf/configure --with-system-zlib && make ctf-error.h && make libctf.la
        #                                                                   w/a for GDB 10.1, remove once updated ^~~~~~~~~~~~~~~^
    fi

script:
  - cd $TRAVIS_BUILD_DIR/simulator/build
  - ninja unit-tests
  - ctest --verbose
  - bash <(curl -s https://codecov.io/bash) -x "${COV}" -p $TRAVIS_BUILD_DIR/simulator -X gcovout
  - ninja mipt-mips && ./mipt-mips -b $TRAVIS_BUILD_DIR/tests/mips/mips-fib.bin -n 5000000 --mars
  - if [ $TRAVIS_GPROF ]; then gprof ./mipt-mips gmon.out -p | head -; fi
  - ninja mipt-v    && ./mipt-v    -b $TRAVIS_BUILD_DIR/tests/mips/mips-fib.bin -n 500000 --mars
  - ninja cachesim  && ./cachesim  -t $TRAVIS_BUILD_DIR/tests/mem_trace.json -s 32768 -w 32
  - |
    if [ $GDB_VER ]; then
        ninja gdb-mips-sim
        pushd $GDB_BUILD/gdb
        make gdb CFLAGS='-w -O0' CXXFLAGS='-w -O0' MAKEINFO=true > /dev/null
        ./gdb -x $TRAVIS_BUILD_DIR/tests/test.gdb --args $TRAVIS_BUILD_DIR/tests/mips/mips-tt.bin
        popd
    fi

after_success:
  - if [ $TRAVIS_TIDY ]; then run-clang-tidy-10.py -header-filter='.*' 2> /dev/null; fi
