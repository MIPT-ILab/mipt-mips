notifications:
  email: false

language: cpp
dist: xenial
osx_image: xcode10.1

branches:
  only:
  - master

compiler:
  - gcc
  - clang
os:
  - linux
  - osx

matrix:
  exclude:
    - os: osx
      compiler: gcc

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    - sourceline: deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-9 main
    update: true
    packages:
    - libboost-dev
    - ninja-build
    - python3
  homebrew:
    packages:
    - ninja
    update: true

install:
  - |
    if [ $CXX == g++ ] && [ "$TRAVIS_OS_NAME" == "linux" ]; then
        sudo apt-get install g++-7
        CXX=g++-7
    fi
  - |
    if [ $CXX == clang++ ] && [ "$TRAVIS_OS_NAME" == "linux" ]; then
        sudo apt-get install libstdc++-7-dev
    fi
# Download GDB
  - wget http://ftp.gnu.org/gnu/gdb/gdb-8.3.tar.gz
  - tar -xzf gdb-8.3.tar.gz

before_script:
  - cd $TRAVIS_BUILD_DIR/simulator         && mkdir debug release
  - cd $TRAVIS_BUILD_DIR/simulator/release && cmake .. -DCMAKE_BUILD_TYPE=Release -DGDB_SOURCE_PATH=$TRAVIS_BUILD_DIR/gdb-8.3 -G "Ninja"
# Prepare for GDB build
  - cd $TRAVIS_BUILD_DIR/gdb-8.3              && ./configure --target=mipsel-unknown-linux --with-system-zlib --with-python=no
  - cd $TRAVIS_BUILD_DIR/gdb-8.3              && make configure-gdb CFLAGS='-w -O0' CXXFLAGS='-w -O0' MAKEINFO=true > /dev/null
  - cd $TRAVIS_BUILD_DIR/gdb-8.3/opcodes      && ./configure --target=mipsel-unknown-linux && make libopcodes.a
  - cd $TRAVIS_BUILD_DIR/gdb-8.3/libdecnumber && ./configure && make libdecnumber.a
  - cd $TRAVIS_BUILD_DIR/gdb-8.3/readline     && ./configure && make libreadline.a

script:
  - cd $TRAVIS_BUILD_DIR/simulator/release
  - ninja mipt-mips unit-tests
  - ctest --verbose
  - ./mipt-mips -b $TRAVIS_BUILD_DIR/tests/mips-fib.bin -n 1000000 --mars
  - cd $TRAVIS_BUILD_DIR/gdb-8.3/gdb
  - make gdb CFLAGS='-w -O0' CXXFLAGS='-w -O0' MAKEINFO=true > /dev/null
  - ./gdb -x $TRAVIS_BUILD_DIR/tests/test.gdb --args $TRAVIS_BUILD_DIR/tests/mips-tt.bin

after_success:
  - |
    if [ $CXX == clang++ ] && [ "$TRAVIS_OS_NAME" == "linux" ]; then
        sudo apt-get install clang-tidy-9 --allow-unauthenticated
        cd $TRAVIS_BUILD_DIR/simulator/debug
        cmake .. -DCMAKE_BUILD_TYPE=Release
        run-clang-tidy-9.py -header-filter='.*' 2> /dev/null
    fi
  - |
    if [ $CXX == g++-7 ] && [ "$TRAVIS_OS_NAME" == "linux" ]; then
        cd $TRAVIS_BUILD_DIR/simulator/debug
        cmake .. -DCMAKE_BUILD_TYPE=Debug -DENABLE_COVERAGE=1 -G "Ninja"
        ninja unit-tests && ctest
        bash <(curl -s https://codecov.io/bash) > /dev/null || echo "Codecov did not collect coverage reports"
    fi
