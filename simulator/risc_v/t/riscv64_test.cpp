/*
 * riscv64_test.cpp: RISC-V 64 tests generated from RISC-V testing repo
 * https://github.com/riscv/riscv-tests/tree/master/isa/rv64ui
 * Copyright (c) 2012-2015, The Regents of the University of California (Regents).
 */
 
#include <risc_v/riscv_instr.h>
 
using Instr = RISCVInstr<uint64>;
 
#include "riscv_test_wrapper.h"

// TODO(pkryukov): Visual Studio is right - sign extension may produce unexpected results.
// Let's clean up that later.
#ifdef _MSC_VER
#pragma warning( disable : 4245 )
#endif

TEST_IMM_OP( 2,  addi, 0x00000000, 0x00000000, 0x000 )
TEST_IMM_OP( 3,  addi, 0x00000002, 0x00000001, 0x001 )
TEST_IMM_OP( 4,  addi, 0x0000000a, 0x00000003, 0x007 )
TEST_IMM_OP( 5,  addi, 0xfffffffffffff800, 0x0000000000000000, 0x800 )
TEST_IMM_OP( 6,  addi, 0xffffffff80000000, 0xffffffff80000000, 0x000 )
TEST_IMM_OP( 7,  addi, 0xffffffff7ffff800, 0xffffffff80000000, 0x800 )
TEST_IMM_OP( 8,  addi, 0x00000000000007ff, 0x00000000, 0x7ff )
TEST_IMM_OP( 9,  addi, 0x000000007fffffff, 0x7fffffff, 0x000 )
TEST_IMM_OP( 10, addi, 0x00000000800007fe, 0x7fffffff, 0x7ff )
TEST_IMM_OP( 11, addi, 0xffffffff800007ff, 0xffffffff80000000, 0x7ff )
TEST_IMM_OP( 12, addi, 0x000000007ffff7ff, 0x000000007fffffff, 0x800 )
TEST_IMM_OP( 13, addi, 0xffffffffffffffff, 0x0000000000000000, 0xfff )
TEST_IMM_OP( 14, addi, 0x0000000000000000, 0xffffffffffffffff, 0x001 )
TEST_IMM_OP( 15, addi, 0xfffffffffffffffe, 0xffffffffffffffff, 0xfff )
TEST_IMM_OP( 16, addi, 0x0000000080000000, 0x7fffffff, 0x001 )
TEST_IMM_SRC1_EQ_DEST( 17, addi, 24, 13, 11 )
TEST_IMM_DEST_BYPASS( 18, 0, addi, 24, 13, 11 )
TEST_IMM_DEST_BYPASS( 19, 1, addi, 23, 13, 10 )
TEST_IMM_DEST_BYPASS( 20, 2, addi, 22, 13,  9 )
TEST_IMM_SRC1_BYPASS( 21, 0, addi, 24, 13, 11 )
TEST_IMM_SRC1_BYPASS( 22, 1, addi, 23, 13, 10 )
TEST_IMM_SRC1_BYPASS( 23, 2, addi, 22, 13,  9 )
TEST_IMM_ZEROSRC1( 24, addi, 32, 32 )
TEST_IMM_ZERODEST( 25, addi, 33, 50 )
TEST_IMM_OP( 2,  addiw, 0x00000000, 0x00000000, 0x000 )
TEST_IMM_OP( 3,  addiw, 0x00000002, 0x00000001, 0x001 )
TEST_IMM_OP( 4,  addiw, 0x0000000a, 0x00000003, 0x007 )
TEST_IMM_OP( 5,  addiw, 0xfffffffffffff800, 0x0000000000000000, 0x800 )
TEST_IMM_OP( 6,  addiw, 0xffffffff80000000, 0xffffffff80000000, 0x000 )
TEST_IMM_OP( 7,  addiw, 0x000000007ffff800, 0xffffffff80000000, 0x800 )
TEST_IMM_OP( 8,  addiw, 0x00000000000007ff, 0x00000000, 0x7ff )
TEST_IMM_OP( 9,  addiw, 0x000000007fffffff, 0x7fffffff, 0x000 )
TEST_IMM_OP( 10, addiw, 0xffffffff800007fe, 0x7fffffff, 0x7ff )
TEST_IMM_OP( 11, addiw, 0xffffffff800007ff, 0xffffffff80000000, 0x7ff )
TEST_IMM_OP( 12, addiw, 0x000000007ffff7ff, 0x000000007fffffff, 0x800 )
TEST_IMM_OP( 13, addiw, 0xffffffffffffffff, 0x0000000000000000, 0xfff )
TEST_IMM_OP( 14, addiw, 0x0000000000000000, 0xffffffffffffffff, 0x001 )
TEST_IMM_OP( 15, addiw, 0xfffffffffffffffe, 0xffffffffffffffff, 0xfff )
TEST_IMM_OP( 16, addiw, 0xffffffff80000000, 0x7fffffff, 0x001 )
TEST_IMM_SRC1_EQ_DEST( 17, addiw, 24, 13, 11 )
TEST_IMM_DEST_BYPASS( 18, 0, addiw, 24, 13, 11 )
TEST_IMM_DEST_BYPASS( 19, 1, addiw, 23, 13, 10 )
TEST_IMM_DEST_BYPASS( 20, 2, addiw, 22, 13,  9 )
TEST_IMM_SRC1_BYPASS( 21, 0, addiw, 24, 13, 11 )
TEST_IMM_SRC1_BYPASS( 22, 1, addiw, 23, 13, 10 )
TEST_IMM_SRC1_BYPASS( 23, 2, addiw, 22, 13,  9 )
TEST_IMM_ZEROSRC1( 24, addiw, 32, 32 )
TEST_IMM_ZERODEST( 25, addiw, 33, 50 )
TEST_RR_OP( 2,  add, 0x00000000, 0x00000000, 0x00000000 )
TEST_RR_OP( 3,  add, 0x00000002, 0x00000001, 0x00000001 )
TEST_RR_OP( 4,  add, 0x0000000a, 0x00000003, 0x00000007 )
TEST_RR_OP( 5,  add, 0xffffffffffff8000, 0x0000000000000000, 0xffffffffffff8000 )
TEST_RR_OP( 6,  add, 0xffffffff80000000, 0xffffffff80000000, 0x00000000 )
TEST_RR_OP( 7,  add, 0xffffffff7fff8000, 0xffffffff80000000, 0xffffffffffff8000 )
TEST_RR_OP( 8,  add, 0x0000000000007fff, 0x0000000000000000, 0x0000000000007fff )
TEST_RR_OP( 9,  add, 0x000000007fffffff, 0x000000007fffffff, 0x0000000000000000 )
TEST_RR_OP( 10, add, 0x0000000080007ffe, 0x000000007fffffff, 0x0000000000007fff )
TEST_RR_OP( 11, add, 0xffffffff80007fff, 0xffffffff80000000, 0x0000000000007fff )
TEST_RR_OP( 12, add, 0x000000007fff7fff, 0x000000007fffffff, 0xffffffffffff8000 )
TEST_RR_OP( 13, add, 0xffffffffffffffff, 0x0000000000000000, 0xffffffffffffffff )
TEST_RR_OP( 14, add, 0x0000000000000000, 0xffffffffffffffff, 0x0000000000000001 )
TEST_RR_OP( 15, add, 0xfffffffffffffffe, 0xffffffffffffffff, 0xffffffffffffffff )
TEST_RR_OP( 16, add, 0x0000000080000000, 0x0000000000000001, 0x000000007fffffff )
TEST_RR_SRC1_EQ_DEST( 17, add, 24, 13, 11 )
TEST_RR_SRC2_EQ_DEST( 18, add, 25, 14, 11 )
TEST_RR_SRC12_EQ_DEST( 19, add, 26, 13 )
TEST_RR_DEST_BYPASS( 20, 0, add, 24, 13, 11 )
TEST_RR_DEST_BYPASS( 21, 1, add, 25, 14, 11 )
TEST_RR_DEST_BYPASS( 22, 2, add, 26, 15, 11 )
TEST_RR_SRC12_BYPASS( 23, 0, 0, add, 24, 13, 11 )
TEST_RR_SRC12_BYPASS( 24, 0, 1, add, 25, 14, 11 )
TEST_RR_SRC12_BYPASS( 25, 0, 2, add, 26, 15, 11 )
TEST_RR_SRC12_BYPASS( 26, 1, 0, add, 24, 13, 11 )
TEST_RR_SRC12_BYPASS( 27, 1, 1, add, 25, 14, 11 )
TEST_RR_SRC12_BYPASS( 28, 2, 0, add, 26, 15, 11 )
TEST_RR_SRC21_BYPASS( 29, 0, 0, add, 24, 13, 11 )
TEST_RR_SRC21_BYPASS( 30, 0, 1, add, 25, 14, 11 )
TEST_RR_SRC21_BYPASS( 31, 0, 2, add, 26, 15, 11 )
TEST_RR_SRC21_BYPASS( 32, 1, 0, add, 24, 13, 11 )
TEST_RR_SRC21_BYPASS( 33, 1, 1, add, 25, 14, 11 )
TEST_RR_SRC21_BYPASS( 34, 2, 0, add, 26, 15, 11 )
TEST_RR_ZEROSRC1( 35, add, 15, 15 )
TEST_RR_ZEROSRC2( 36, add, 32, 32 )
TEST_RR_ZEROSRC12( 37, add, 0 )
TEST_RR_ZERODEST( 38, add, 16, 30 )
TEST_RR_OP( 2,  addw, 0x00000000, 0x00000000, 0x00000000 )
TEST_RR_OP( 3,  addw, 0x00000002, 0x00000001, 0x00000001 )
TEST_RR_OP( 4,  addw, 0x0000000a, 0x00000003, 0x00000007 )
TEST_RR_OP( 5,  addw, 0xffffffffffff8000, 0x0000000000000000, 0xffffffffffff8000 )
TEST_RR_OP( 6,  addw, 0xffffffff80000000, 0xffffffff80000000, 0x00000000 )
TEST_RR_OP( 7,  addw, 0x000000007fff8000, 0xffffffff80000000, 0xffffffffffff8000 )
TEST_RR_OP( 8,  addw, 0x0000000000007fff, 0x0000000000000000, 0x0000000000007fff )
TEST_RR_OP( 9,  addw, 0x000000007fffffff, 0x000000007fffffff, 0x0000000000000000 )
TEST_RR_OP( 10, addw, 0xffffffff80007ffe, 0x000000007fffffff, 0x0000000000007fff )
TEST_RR_OP( 11, addw, 0xffffffff80007fff, 0xffffffff80000000, 0x0000000000007fff )
TEST_RR_OP( 12, addw, 0x000000007fff7fff, 0x000000007fffffff, 0xffffffffffff8000 )
TEST_RR_OP( 13, addw, 0xffffffffffffffff, 0x0000000000000000, 0xffffffffffffffff )
TEST_RR_OP( 14, addw, 0x0000000000000000, 0xffffffffffffffff, 0x0000000000000001 )
TEST_RR_OP( 15, addw, 0xfffffffffffffffe, 0xffffffffffffffff, 0xffffffffffffffff )
TEST_RR_OP( 16, addw, 0xffffffff80000000, 0x0000000000000001, 0x000000007fffffff )
TEST_RR_SRC1_EQ_DEST( 17, addw, 24, 13, 11 )
TEST_RR_SRC2_EQ_DEST( 18, addw, 25, 14, 11 )
TEST_RR_SRC12_EQ_DEST( 19, addw, 26, 13 )
TEST_RR_DEST_BYPASS( 20, 0, addw, 24, 13, 11 )
TEST_RR_DEST_BYPASS( 21, 1, addw, 25, 14, 11 )
TEST_RR_DEST_BYPASS( 22, 2, addw, 26, 15, 11 )
TEST_RR_SRC12_BYPASS( 23, 0, 0, addw, 24, 13, 11 )
TEST_RR_SRC12_BYPASS( 24, 0, 1, addw, 25, 14, 11 )
TEST_RR_SRC12_BYPASS( 25, 0, 2, addw, 26, 15, 11 )
TEST_RR_SRC12_BYPASS( 26, 1, 0, addw, 24, 13, 11 )
TEST_RR_SRC12_BYPASS( 27, 1, 1, addw, 25, 14, 11 )
TEST_RR_SRC12_BYPASS( 28, 2, 0, addw, 26, 15, 11 )
TEST_RR_SRC21_BYPASS( 29, 0, 0, addw, 24, 13, 11 )
TEST_RR_SRC21_BYPASS( 30, 0, 1, addw, 25, 14, 11 )
TEST_RR_SRC21_BYPASS( 31, 0, 2, addw, 26, 15, 11 )
TEST_RR_SRC21_BYPASS( 32, 1, 0, addw, 24, 13, 11 )
TEST_RR_SRC21_BYPASS( 33, 1, 1, addw, 25, 14, 11 )
TEST_RR_SRC21_BYPASS( 34, 2, 0, addw, 26, 15, 11 )
TEST_RR_ZEROSRC1( 35, addw, 15, 15 )
TEST_RR_ZEROSRC2( 36, addw, 32, 32 )
TEST_RR_ZEROSRC12( 37, addw, 0 )
TEST_RR_ZERODEST( 38, addw, 16, 30 )
TEST_IMM_OP( 2, andi, 0xff00ff00, 0xff00ff00, 0xf0f )
TEST_IMM_OP( 3, andi, 0x000000f0, 0x0ff00ff0, 0x0f0 )
TEST_IMM_OP( 4, andi, 0x0000000f, 0x00ff00ff, 0x70f )
TEST_IMM_OP( 5, andi, 0x00000000, 0xf00ff00f, 0x0f0 )
TEST_IMM_SRC1_EQ_DEST( 6, andi, 0x00000000, 0xff00ff00, 0x0f0 )
TEST_IMM_DEST_BYPASS( 7,  0, andi, 0x00000700, 0x0ff00ff0, 0x70f )
TEST_IMM_DEST_BYPASS( 8,  1, andi, 0x000000f0, 0x00ff00ff, 0x0f0 )
TEST_IMM_DEST_BYPASS( 9,  2, andi, 0xf00ff00f, 0xf00ff00f, 0xf0f )
TEST_IMM_SRC1_BYPASS( 10, 0, andi, 0x00000700, 0x0ff00ff0, 0x70f )
TEST_IMM_SRC1_BYPASS( 11, 1, andi, 0x000000f0, 0x00ff00ff, 0x0f0 )
TEST_IMM_SRC1_BYPASS( 12, 2, andi, 0x0000000f, 0xf00ff00f, 0x70f )
TEST_IMM_ZEROSRC1( 13, andi, 0, 0x0f0 )
TEST_IMM_ZERODEST( 14, andi, 0x00ff00ff, 0x70f )
TEST_RR_OP( 2, and, 0x0f000f00, 0xff00ff00, 0x0f0f0f0f )
TEST_RR_OP( 3, and, 0x00f000f0, 0x0ff00ff0, 0xf0f0f0f0 )
TEST_RR_OP( 4, and, 0x000f000f, 0x00ff00ff, 0x0f0f0f0f )
TEST_RR_OP( 5, and, 0xf000f000, 0xf00ff00f, 0xf0f0f0f0 )
TEST_RR_SRC1_EQ_DEST( 6, and, 0x0f000f00, 0xff00ff00, 0x0f0f0f0f )
TEST_RR_SRC2_EQ_DEST( 7, and, 0x00f000f0, 0x0ff00ff0, 0xf0f0f0f0 )
TEST_RR_SRC12_EQ_DEST( 8, and, 0xff00ff00, 0xff00ff00 )
TEST_RR_DEST_BYPASS( 9,  0, and, 0x0f000f00, 0xff00ff00, 0x0f0f0f0f )
TEST_RR_DEST_BYPASS( 10, 1, and, 0x00f000f0, 0x0ff00ff0, 0xf0f0f0f0 )
TEST_RR_DEST_BYPASS( 11, 2, and, 0x000f000f, 0x00ff00ff, 0x0f0f0f0f )
TEST_RR_SRC12_BYPASS( 12, 0, 0, and, 0x0f000f00, 0xff00ff00, 0x0f0f0f0f )
TEST_RR_SRC12_BYPASS( 13, 0, 1, and, 0x00f000f0, 0x0ff00ff0, 0xf0f0f0f0 )
TEST_RR_SRC12_BYPASS( 14, 0, 2, and, 0x000f000f, 0x00ff00ff, 0x0f0f0f0f )
TEST_RR_SRC12_BYPASS( 15, 1, 0, and, 0x0f000f00, 0xff00ff00, 0x0f0f0f0f )
TEST_RR_SRC12_BYPASS( 16, 1, 1, and, 0x00f000f0, 0x0ff00ff0, 0xf0f0f0f0 )
TEST_RR_SRC12_BYPASS( 17, 2, 0, and, 0x000f000f, 0x00ff00ff, 0x0f0f0f0f )
TEST_RR_SRC21_BYPASS( 18, 0, 0, and, 0x0f000f00, 0xff00ff00, 0x0f0f0f0f )
TEST_RR_SRC21_BYPASS( 19, 0, 1, and, 0x00f000f0, 0x0ff00ff0, 0xf0f0f0f0 )
TEST_RR_SRC21_BYPASS( 20, 0, 2, and, 0x000f000f, 0x00ff00ff, 0x0f0f0f0f )
TEST_RR_SRC21_BYPASS( 21, 1, 0, and, 0x0f000f00, 0xff00ff00, 0x0f0f0f0f )
TEST_RR_SRC21_BYPASS( 22, 1, 1, and, 0x00f000f0, 0x0ff00ff0, 0xf0f0f0f0 )
TEST_RR_SRC21_BYPASS( 23, 2, 0, and, 0x000f000f, 0x00ff00ff, 0x0f0f0f0f )
TEST_RR_ZEROSRC1( 24, and, 0, 0xff00ff00 )
TEST_RR_ZEROSRC2( 25, and, 0, 0x00ff00ff )
TEST_RR_ZEROSRC12( 26, and, 0 )
TEST_RR_ZERODEST( 27, and, 0x11111111, 0x22222222 )
TEST_BR2_OP_TAKEN( 2, beq,  0,  0 )
TEST_BR2_OP_TAKEN( 3, beq,  1,  1 )
TEST_BR2_OP_TAKEN( 4, beq, -1, -1 )
TEST_BR2_OP_NOTTAKEN( 5, beq,  0,  1 )
TEST_BR2_OP_NOTTAKEN( 6, beq,  1,  0 )
TEST_BR2_OP_NOTTAKEN( 7, beq, -1,  1 )
TEST_BR2_OP_NOTTAKEN( 8, beq,  1, -1 )
TEST_BR2_SRC12_BYPASS( 9,  0, 0, beq, 0, -1 )
TEST_BR2_SRC12_BYPASS( 10, 0, 1, beq, 0, -1 )
TEST_BR2_SRC12_BYPASS( 11, 0, 2, beq, 0, -1 )
TEST_BR2_SRC12_BYPASS( 12, 1, 0, beq, 0, -1 )
TEST_BR2_SRC12_BYPASS( 13, 1, 1, beq, 0, -1 )
TEST_BR2_SRC12_BYPASS( 14, 2, 0, beq, 0, -1 )
TEST_BR2_SRC12_BYPASS( 15, 0, 0, beq, 0, -1 )
TEST_BR2_SRC12_BYPASS( 16, 0, 1, beq, 0, -1 )
TEST_BR2_SRC12_BYPASS( 17, 0, 2, beq, 0, -1 )
TEST_BR2_SRC12_BYPASS( 18, 1, 0, beq, 0, -1 )
TEST_BR2_SRC12_BYPASS( 19, 1, 1, beq, 0, -1 )
TEST_BR2_SRC12_BYPASS( 20, 2, 0, beq, 0, -1 )
TEST_BR2_OP_TAKEN( 2, bge,  0,  0 )
TEST_BR2_OP_TAKEN( 3, bge,  1,  1 )
TEST_BR2_OP_TAKEN( 4, bge, -1, -1 )
TEST_BR2_OP_TAKEN( 5, bge,  1,  0 )
TEST_BR2_OP_TAKEN( 6, bge,  1, -1 )
TEST_BR2_OP_TAKEN( 7, bge, -1, -2 )
TEST_BR2_OP_NOTTAKEN(  8, bge,  0,  1 )
TEST_BR2_OP_NOTTAKEN(  9, bge, -1,  1 )
TEST_BR2_OP_NOTTAKEN( 10, bge, -2, -1 )
TEST_BR2_OP_NOTTAKEN( 11, bge, -2,  1 )
TEST_BR2_SRC12_BYPASS( 12, 0, 0, bge, -1, 0 )
TEST_BR2_SRC12_BYPASS( 13, 0, 1, bge, -1, 0 )
TEST_BR2_SRC12_BYPASS( 14, 0, 2, bge, -1, 0 )
TEST_BR2_SRC12_BYPASS( 15, 1, 0, bge, -1, 0 )
TEST_BR2_SRC12_BYPASS( 16, 1, 1, bge, -1, 0 )
TEST_BR2_SRC12_BYPASS( 17, 2, 0, bge, -1, 0 )
TEST_BR2_SRC12_BYPASS( 18, 0, 0, bge, -1, 0 )
TEST_BR2_SRC12_BYPASS( 19, 0, 1, bge, -1, 0 )
TEST_BR2_SRC12_BYPASS( 20, 0, 2, bge, -1, 0 )
TEST_BR2_SRC12_BYPASS( 21, 1, 0, bge, -1, 0 )
TEST_BR2_SRC12_BYPASS( 22, 1, 1, bge, -1, 0 )
TEST_BR2_SRC12_BYPASS( 23, 2, 0, bge, -1, 0 )
TEST_BR2_OP_TAKEN( 2, bgeu, 0x00000000, 0x00000000 )
TEST_BR2_OP_TAKEN( 3, bgeu, 0x00000001, 0x00000001 )
TEST_BR2_OP_TAKEN( 4, bgeu, 0xffffffff, 0xffffffff )
TEST_BR2_OP_TAKEN( 5, bgeu, 0x00000001, 0x00000000 )
TEST_BR2_OP_TAKEN( 6, bgeu, 0xffffffff, 0xfffffffe )
TEST_BR2_OP_TAKEN( 7, bgeu, 0xffffffff, 0x00000000 )
TEST_BR2_OP_NOTTAKEN(  8, bgeu, 0x00000000, 0x00000001 )
TEST_BR2_OP_NOTTAKEN(  9, bgeu, 0xfffffffe, 0xffffffff )
TEST_BR2_OP_NOTTAKEN( 10, bgeu, 0x00000000, 0xffffffff )
TEST_BR2_OP_NOTTAKEN( 11, bgeu, 0x7fffffff, 0x80000000 )
TEST_BR2_SRC12_BYPASS( 12, 0, 0, bgeu, 0xefffffff, 0xf0000000 )
TEST_BR2_SRC12_BYPASS( 13, 0, 1, bgeu, 0xefffffff, 0xf0000000 )
TEST_BR2_SRC12_BYPASS( 14, 0, 2, bgeu, 0xefffffff, 0xf0000000 )
TEST_BR2_SRC12_BYPASS( 15, 1, 0, bgeu, 0xefffffff, 0xf0000000 )
TEST_BR2_SRC12_BYPASS( 16, 1, 1, bgeu, 0xefffffff, 0xf0000000 )
TEST_BR2_SRC12_BYPASS( 17, 2, 0, bgeu, 0xefffffff, 0xf0000000 )
TEST_BR2_SRC12_BYPASS( 18, 0, 0, bgeu, 0xefffffff, 0xf0000000 )
TEST_BR2_SRC12_BYPASS( 19, 0, 1, bgeu, 0xefffffff, 0xf0000000 )
TEST_BR2_SRC12_BYPASS( 20, 0, 2, bgeu, 0xefffffff, 0xf0000000 )
TEST_BR2_SRC12_BYPASS( 21, 1, 0, bgeu, 0xefffffff, 0xf0000000 )
TEST_BR2_SRC12_BYPASS( 22, 1, 1, bgeu, 0xefffffff, 0xf0000000 )
TEST_BR2_SRC12_BYPASS( 23, 2, 0, bgeu, 0xefffffff, 0xf0000000 )
TEST_BR2_OP_TAKEN( 2, blt,  0,  1 )
TEST_BR2_OP_TAKEN( 3, blt, -1,  1 )
TEST_BR2_OP_TAKEN( 4, blt, -2, -1 )
TEST_BR2_OP_NOTTAKEN( 5, blt,  1,  0 )
TEST_BR2_OP_NOTTAKEN( 6, blt,  1, -1 )
TEST_BR2_OP_NOTTAKEN( 7, blt, -1, -2 )
TEST_BR2_OP_NOTTAKEN( 8, blt,  1, -2 )
TEST_BR2_SRC12_BYPASS( 9,  0, 0, blt, 0, -1 )
TEST_BR2_SRC12_BYPASS( 10, 0, 1, blt, 0, -1 )
TEST_BR2_SRC12_BYPASS( 11, 0, 2, blt, 0, -1 )
TEST_BR2_SRC12_BYPASS( 12, 1, 0, blt, 0, -1 )
TEST_BR2_SRC12_BYPASS( 13, 1, 1, blt, 0, -1 )
TEST_BR2_SRC12_BYPASS( 14, 2, 0, blt, 0, -1 )
TEST_BR2_SRC12_BYPASS( 15, 0, 0, blt, 0, -1 )
TEST_BR2_SRC12_BYPASS( 16, 0, 1, blt, 0, -1 )
TEST_BR2_SRC12_BYPASS( 17, 0, 2, blt, 0, -1 )
TEST_BR2_SRC12_BYPASS( 18, 1, 0, blt, 0, -1 )
TEST_BR2_SRC12_BYPASS( 19, 1, 1, blt, 0, -1 )
TEST_BR2_SRC12_BYPASS( 20, 2, 0, blt, 0, -1 )
TEST_BR2_OP_TAKEN( 2, bltu, 0x00000000, 0x00000001 )
TEST_BR2_OP_TAKEN( 3, bltu, 0xfffffffe, 0xffffffff )
TEST_BR2_OP_TAKEN( 4, bltu, 0x00000000, 0xffffffff )
TEST_BR2_OP_NOTTAKEN( 5, bltu, 0x00000001, 0x00000000 )
TEST_BR2_OP_NOTTAKEN( 6, bltu, 0xffffffff, 0xfffffffe )
TEST_BR2_OP_NOTTAKEN( 7, bltu, 0xffffffff, 0x00000000 )
TEST_BR2_OP_NOTTAKEN( 8, bltu, 0x80000000, 0x7fffffff )
TEST_BR2_SRC12_BYPASS( 9,  0, 0, bltu, 0xf0000000, 0xefffffff )
TEST_BR2_SRC12_BYPASS( 10, 0, 1, bltu, 0xf0000000, 0xefffffff )
TEST_BR2_SRC12_BYPASS( 11, 0, 2, bltu, 0xf0000000, 0xefffffff )
TEST_BR2_SRC12_BYPASS( 12, 1, 0, bltu, 0xf0000000, 0xefffffff )
TEST_BR2_SRC12_BYPASS( 13, 1, 1, bltu, 0xf0000000, 0xefffffff )
TEST_BR2_SRC12_BYPASS( 14, 2, 0, bltu, 0xf0000000, 0xefffffff )
TEST_BR2_SRC12_BYPASS( 15, 0, 0, bltu, 0xf0000000, 0xefffffff )
TEST_BR2_SRC12_BYPASS( 16, 0, 1, bltu, 0xf0000000, 0xefffffff )
TEST_BR2_SRC12_BYPASS( 17, 0, 2, bltu, 0xf0000000, 0xefffffff )
TEST_BR2_SRC12_BYPASS( 18, 1, 0, bltu, 0xf0000000, 0xefffffff )
TEST_BR2_SRC12_BYPASS( 19, 1, 1, bltu, 0xf0000000, 0xefffffff )
TEST_BR2_SRC12_BYPASS( 20, 2, 0, bltu, 0xf0000000, 0xefffffff )
TEST_BR2_OP_TAKEN( 2, bne,  0,  1 )
TEST_BR2_OP_TAKEN( 3, bne,  1,  0 )
TEST_BR2_OP_TAKEN( 4, bne, -1,  1 )
TEST_BR2_OP_TAKEN( 5, bne,  1, -1 )
TEST_BR2_OP_NOTTAKEN( 6, bne,  0,  0 )
TEST_BR2_OP_NOTTAKEN( 7, bne,  1,  1 )
TEST_BR2_OP_NOTTAKEN( 8, bne, -1, -1 )
TEST_BR2_SRC12_BYPASS( 9,  0, 0, bne, 0, 0 )
TEST_BR2_SRC12_BYPASS( 10, 0, 1, bne, 0, 0 )
TEST_BR2_SRC12_BYPASS( 11, 0, 2, bne, 0, 0 )
TEST_BR2_SRC12_BYPASS( 12, 1, 0, bne, 0, 0 )
TEST_BR2_SRC12_BYPASS( 13, 1, 1, bne, 0, 0 )
TEST_BR2_SRC12_BYPASS( 14, 2, 0, bne, 0, 0 )
TEST_BR2_SRC12_BYPASS( 15, 0, 0, bne, 0, 0 )
TEST_BR2_SRC12_BYPASS( 16, 0, 1, bne, 0, 0 )
TEST_BR2_SRC12_BYPASS( 17, 0, 2, bne, 0, 0 )
TEST_BR2_SRC12_BYPASS( 18, 1, 0, bne, 0, 0 )
TEST_BR2_SRC12_BYPASS( 19, 1, 1, bne, 0, 0 )
TEST_BR2_SRC12_BYPASS( 20, 2, 0, bne, 0, 0 )
TEST_JALR_SRC1_BYPASS( 4, 0, jalr )
TEST_JALR_SRC1_BYPASS( 5, 1, jalr )
TEST_JALR_SRC1_BYPASS( 6, 2, jalr )
#if 0
TEST_LD_OP( 2, lb, 0xffffffffffffffff, 0,  tdat )
TEST_LD_OP( 3, lb, 0x0000000000000000, 1,  tdat )
TEST_LD_OP( 4, lb, 0xfffffffffffffff0, 2,  tdat )
TEST_LD_OP( 5, lb, 0x000000000000000f, 3, tdat )
TEST_LD_OP( 6, lb, 0xffffffffffffffff, -3, tdat4 )
TEST_LD_OP( 7, lb, 0x0000000000000000, -2,  tdat4 )
TEST_LD_OP( 8, lb, 0xfffffffffffffff0, -1,  tdat4 )
TEST_LD_OP( 9, lb, 0x000000000000000f, 0,   tdat4 )
TEST_LD_DEST_BYPASS( 12, 0, lb, 0xfffffffffffffff0, 1, tdat2 )
TEST_LD_DEST_BYPASS( 13, 1, lb, 0x000000000000000f, 1, tdat3 )
TEST_LD_DEST_BYPASS( 14, 2, lb, 0x0000000000000000, 1, tdat1 )
TEST_LD_SRC1_BYPASS( 15, 0, lb, 0xfffffffffffffff0, 1, tdat2 )
TEST_LD_SRC1_BYPASS( 16, 1, lb, 0x000000000000000f, 1, tdat3 )
TEST_LD_SRC1_BYPASS( 17, 2, lb, 0x0000000000000000, 1, tdat1 )
TEST_LD_OP( 2, lbu, 0x00000000000000ff, 0,  tdat )
TEST_LD_OP( 3, lbu, 0x0000000000000000, 1,  tdat )
TEST_LD_OP( 4, lbu, 0x00000000000000f0, 2,  tdat )
TEST_LD_OP( 5, lbu, 0x000000000000000f, 3, tdat )
TEST_LD_OP( 6, lbu, 0x00000000000000ff, -3, tdat4 )
TEST_LD_OP( 7, lbu, 0x0000000000000000, -2,  tdat4 )
TEST_LD_OP( 8, lbu, 0x00000000000000f0, -1,  tdat4 )
TEST_LD_OP( 9, lbu, 0x000000000000000f, 0,   tdat4 )
TEST_LD_DEST_BYPASS( 12, 0, lbu, 0x00000000000000f0, 1, tdat2 )
TEST_LD_DEST_BYPASS( 13, 1, lbu, 0x000000000000000f, 1, tdat3 )
TEST_LD_DEST_BYPASS( 14, 2, lbu, 0x0000000000000000, 1, tdat1 )
TEST_LD_SRC1_BYPASS( 15, 0, lbu, 0x00000000000000f0, 1, tdat2 )
TEST_LD_SRC1_BYPASS( 16, 1, lbu, 0x000000000000000f, 1, tdat3 )
TEST_LD_SRC1_BYPASS( 17, 2, lbu, 0x0000000000000000, 1, tdat1 )
TEST_LD_OP( 2, ld, 0x00ff00ff00ff00ff, 0,  tdat )
TEST_LD_OP( 3, ld, 0xff00ff00ff00ff00, 8,  tdat )
TEST_LD_OP( 4, ld, 0x0ff00ff00ff00ff0, 16, tdat )
TEST_LD_OP( 5, ld, 0xf00ff00ff00ff00f, 24, tdat )
TEST_LD_OP( 6, ld, 0x00ff00ff00ff00ff, -24, tdat4 )
TEST_LD_OP( 7, ld, 0xff00ff00ff00ff00, -16, tdat4 )
TEST_LD_OP( 8, ld, 0x0ff00ff00ff00ff0, -8,  tdat4 )
TEST_LD_OP( 9, ld, 0xf00ff00ff00ff00f, 0,   tdat4 )
TEST_LD_DEST_BYPASS( 12, 0, ld, 0x0ff00ff00ff00ff0, 8, tdat2 )
TEST_LD_DEST_BYPASS( 13, 1, ld, 0xf00ff00ff00ff00f, 8, tdat3 )
TEST_LD_DEST_BYPASS( 14, 2, ld, 0xff00ff00ff00ff00, 8, tdat1 )
TEST_LD_SRC1_BYPASS( 15, 0, ld, 0x0ff00ff00ff00ff0, 8, tdat2 )
TEST_LD_SRC1_BYPASS( 16, 1, ld, 0xf00ff00ff00ff00f, 8, tdat3 )
TEST_LD_SRC1_BYPASS( 17, 2, ld, 0xff00ff00ff00ff00, 8, tdat1 )
TEST_LD_OP( 2, lh, 0x00000000000000ff, 0,  tdat )
TEST_LD_OP( 3, lh, 0xffffffffffffff00, 2,  tdat )
TEST_LD_OP( 4, lh, 0x0000000000000ff0, 4,  tdat )
TEST_LD_OP( 5, lh, 0xfffffffffffff00f, 6, tdat )
TEST_LD_OP( 6, lh, 0x00000000000000ff, -6,  tdat4 )
TEST_LD_OP( 7, lh, 0xffffffffffffff00, -4,  tdat4 )
TEST_LD_OP( 8, lh, 0x0000000000000ff0, -2,  tdat4 )
TEST_LD_OP( 9, lh, 0xfffffffffffff00f,  0, tdat4 )
TEST_LD_DEST_BYPASS( 12, 0, lh, 0x0000000000000ff0, 2, tdat2 )
TEST_LD_DEST_BYPASS( 13, 1, lh, 0xfffffffffffff00f, 2, tdat3 )
TEST_LD_DEST_BYPASS( 14, 2, lh, 0xffffffffffffff00, 2, tdat1 )
TEST_LD_SRC1_BYPASS( 15, 0, lh, 0x0000000000000ff0, 2, tdat2 )
TEST_LD_SRC1_BYPASS( 16, 1, lh, 0xfffffffffffff00f, 2, tdat3 )
TEST_LD_SRC1_BYPASS( 17, 2, lh, 0xffffffffffffff00, 2, tdat1 )
TEST_LD_OP( 2, lhu, 0x00000000000000ff, 0,  tdat )
TEST_LD_OP( 3, lhu, 0x000000000000ff00, 2,  tdat )
TEST_LD_OP( 4, lhu, 0x0000000000000ff0, 4,  tdat )
TEST_LD_OP( 5, lhu, 0x000000000000f00f, 6, tdat )
TEST_LD_OP( 6, lhu, 0x00000000000000ff, -6,  tdat4 )
TEST_LD_OP( 7, lhu, 0x000000000000ff00, -4,  tdat4 )
TEST_LD_OP( 8, lhu, 0x0000000000000ff0, -2,  tdat4 )
TEST_LD_OP( 9, lhu, 0x000000000000f00f,  0, tdat4 )
TEST_LD_DEST_BYPASS( 12, 0, lhu, 0x0000000000000ff0, 2, tdat2 )
TEST_LD_DEST_BYPASS( 13, 1, lhu, 0x000000000000f00f, 2, tdat3 )
TEST_LD_DEST_BYPASS( 14, 2, lhu, 0x000000000000ff00, 2, tdat1 )
TEST_LD_SRC1_BYPASS( 15, 0, lhu, 0x0000000000000ff0, 2, tdat2 )
TEST_LD_SRC1_BYPASS( 16, 1, lhu, 0x000000000000f00f, 2, tdat3 )
TEST_LD_SRC1_BYPASS( 17, 2, lhu, 0x000000000000ff00, 2, tdat1 )
TEST_LD_OP( 2, lw, 0x0000000000ff00ff, 0,  tdat )
TEST_LD_OP( 3, lw, 0xffffffffff00ff00, 4,  tdat )
TEST_LD_OP( 4, lw, 0x000000000ff00ff0, 8,  tdat )
TEST_LD_OP( 5, lw, 0xfffffffff00ff00f, 12, tdat )
TEST_LD_OP( 6, lw, 0x0000000000ff00ff, -12, tdat4 )
TEST_LD_OP( 7, lw, 0xffffffffff00ff00, -8,  tdat4 )
TEST_LD_OP( 8, lw, 0x000000000ff00ff0, -4,  tdat4 )
TEST_LD_OP( 9, lw, 0xfffffffff00ff00f, 0,   tdat4 )
TEST_LD_DEST_BYPASS( 12, 0, lw, 0x000000000ff00ff0, 4, tdat2 )
TEST_LD_DEST_BYPASS( 13, 1, lw, 0xfffffffff00ff00f, 4, tdat3 )
TEST_LD_DEST_BYPASS( 14, 2, lw, 0xffffffffff00ff00, 4, tdat1 )
TEST_LD_SRC1_BYPASS( 15, 0, lw, 0x000000000ff00ff0, 4, tdat2 )
TEST_LD_SRC1_BYPASS( 16, 1, lw, 0xfffffffff00ff00f, 4, tdat3 )
TEST_LD_SRC1_BYPASS( 17, 2, lw, 0xffffffffff00ff00, 4, tdat1 )
TEST_LD_OP( 2, lwu, 0x0000000000ff00ff, 0,  tdat )
TEST_LD_OP( 3, lwu, 0x00000000ff00ff00, 4,  tdat )
TEST_LD_OP( 4, lwu, 0x000000000ff00ff0, 8,  tdat )
TEST_LD_OP( 5, lwu, 0x00000000f00ff00f, 12, tdat )
TEST_LD_OP( 6, lwu, 0x0000000000ff00ff, -12, tdat4 )
TEST_LD_OP( 7, lwu, 0x00000000ff00ff00, -8,  tdat4 )
TEST_LD_OP( 8, lwu, 0x000000000ff00ff0, -4,  tdat4 )
TEST_LD_OP( 9, lwu, 0x00000000f00ff00f, 0,   tdat4 )
TEST_LD_DEST_BYPASS( 12, 0, lwu, 0x000000000ff00ff0, 4, tdat2 )
TEST_LD_DEST_BYPASS( 13, 1, lwu, 0x00000000f00ff00f, 4, tdat3 )
TEST_LD_DEST_BYPASS( 14, 2, lwu, 0x00000000ff00ff00, 4, tdat1 )
TEST_LD_SRC1_BYPASS( 15, 0, lwu, 0x000000000ff00ff0, 4, tdat2 )
TEST_LD_SRC1_BYPASS( 16, 1, lwu, 0x00000000f00ff00f, 4, tdat3 )
TEST_LD_SRC1_BYPASS( 17, 2, lwu, 0x00000000ff00ff00, 4, tdat1 )
#endif
TEST_IMM_OP( 2, ori, 0xffffffffffffff0f, 0xffffffffff00ff00, 0xf0f )
TEST_IMM_OP( 3, ori, 0x000000000ff00ff0, 0x000000000ff00ff0, 0x0f0 )
TEST_IMM_OP( 4, ori, 0x0000000000ff07ff, 0x0000000000ff00ff, 0x70f )
TEST_IMM_OP( 5, ori, 0xfffffffff00ff0ff, 0xfffffffff00ff00f, 0x0f0 )
TEST_IMM_SRC1_EQ_DEST( 6, ori, 0xff00fff0, 0xff00ff00, 0x0f0 )
TEST_IMM_DEST_BYPASS( 7,  0, ori, 0x000000000ff00ff0, 0x000000000ff00ff0, 0x0f0 )
TEST_IMM_DEST_BYPASS( 8,  1, ori, 0x0000000000ff07ff, 0x0000000000ff00ff, 0x70f )
TEST_IMM_DEST_BYPASS( 9,  2, ori, 0xfffffffff00ff0ff, 0xfffffffff00ff00f, 0x0f0 )
TEST_IMM_SRC1_BYPASS( 10, 0, ori, 0x000000000ff00ff0, 0x000000000ff00ff0, 0x0f0 )
TEST_IMM_SRC1_BYPASS( 11, 1, ori, 0xffffffffffffffff, 0x0000000000ff00ff, 0xf0f )
TEST_IMM_SRC1_BYPASS( 12, 2, ori, 0xfffffffff00ff0ff, 0xfffffffff00ff00f, 0x0f0 )
TEST_IMM_ZEROSRC1( 13, ori, 0x0f0, 0x0f0 )
TEST_IMM_ZERODEST( 14, ori, 0x00ff00ff, 0x70f )
TEST_RR_OP( 2, or, 0xff0fff0f, 0xff00ff00, 0x0f0f0f0f )
TEST_RR_OP( 3, or, 0xfff0fff0, 0x0ff00ff0, 0xf0f0f0f0 )
TEST_RR_OP( 4, or, 0x0fff0fff, 0x00ff00ff, 0x0f0f0f0f )
TEST_RR_OP( 5, or, 0xf0fff0ff, 0xf00ff00f, 0xf0f0f0f0 )
TEST_RR_SRC1_EQ_DEST( 6, or, 0xff0fff0f, 0xff00ff00, 0x0f0f0f0f )
TEST_RR_SRC2_EQ_DEST( 7, or, 0xff0fff0f, 0xff00ff00, 0x0f0f0f0f )
TEST_RR_SRC12_EQ_DEST( 8, or, 0xff00ff00, 0xff00ff00 )
TEST_RR_DEST_BYPASS( 9,  0, or, 0xff0fff0f, 0xff00ff00, 0x0f0f0f0f )
TEST_RR_DEST_BYPASS( 10, 1, or, 0xfff0fff0, 0x0ff00ff0, 0xf0f0f0f0 )
TEST_RR_DEST_BYPASS( 11, 2, or, 0x0fff0fff, 0x00ff00ff, 0x0f0f0f0f )
TEST_RR_SRC12_BYPASS( 12, 0, 0, or, 0xff0fff0f, 0xff00ff00, 0x0f0f0f0f )
TEST_RR_SRC12_BYPASS( 13, 0, 1, or, 0xfff0fff0, 0x0ff00ff0, 0xf0f0f0f0 )
TEST_RR_SRC12_BYPASS( 14, 0, 2, or, 0x0fff0fff, 0x00ff00ff, 0x0f0f0f0f )
TEST_RR_SRC12_BYPASS( 15, 1, 0, or, 0xff0fff0f, 0xff00ff00, 0x0f0f0f0f )
TEST_RR_SRC12_BYPASS( 16, 1, 1, or, 0xfff0fff0, 0x0ff00ff0, 0xf0f0f0f0 )
TEST_RR_SRC12_BYPASS( 17, 2, 0, or, 0x0fff0fff, 0x00ff00ff, 0x0f0f0f0f )
TEST_RR_SRC21_BYPASS( 18, 0, 0, or, 0xff0fff0f, 0xff00ff00, 0x0f0f0f0f )
TEST_RR_SRC21_BYPASS( 19, 0, 1, or, 0xfff0fff0, 0x0ff00ff0, 0xf0f0f0f0 )
TEST_RR_SRC21_BYPASS( 20, 0, 2, or, 0x0fff0fff, 0x00ff00ff, 0x0f0f0f0f )
TEST_RR_SRC21_BYPASS( 21, 1, 0, or, 0xff0fff0f, 0xff00ff00, 0x0f0f0f0f )
TEST_RR_SRC21_BYPASS( 22, 1, 1, or, 0xfff0fff0, 0x0ff00ff0, 0xf0f0f0f0 )
TEST_RR_SRC21_BYPASS( 23, 2, 0, or, 0x0fff0fff, 0x00ff00ff, 0x0f0f0f0f )
TEST_RR_ZEROSRC1( 24, or, 0xff00ff00, 0xff00ff00 )
TEST_RR_ZEROSRC2( 25, or, 0x00ff00ff, 0x00ff00ff )
TEST_RR_ZEROSRC12( 26, or, 0 )
TEST_RR_ZERODEST( 27, or, 0x11111111, 0x22222222 )
TEST_ST_OP( 2, lb, sb, 0xffffffffffffffaa, 0, tdat )
TEST_ST_OP( 3, lb, sb, 0x0000000000000000, 1, tdat )
// TEST_ST_OP( 4, lh, sb, 0xffffffffffffefa0, 2, tdat )
TEST_ST_OP( 5, lb, sb, 0x000000000000000a, 3, tdat )
TEST_ST_OP( 6, lb, sb, 0xffffffffffffffaa, -3, tdat8 )
TEST_ST_OP( 7, lb, sb, 0x0000000000000000, -2, tdat8 )
TEST_ST_OP( 8, lb, sb, 0xffffffffffffffa0, -1, tdat8 )
TEST_ST_OP( 9, lb, sb, 0x000000000000000a, 0,  tdat8 )
TEST_ST_SRC12_BYPASS( 12, 0, 0, lb, sb, 0xffffffffffffffdd, 0, tdat )
TEST_ST_SRC12_BYPASS( 13, 0, 1, lb, sb, 0xffffffffffffffcd, 1, tdat )
TEST_ST_SRC12_BYPASS( 14, 0, 2, lb, sb, 0xffffffffffffffcc, 2, tdat )
TEST_ST_SRC12_BYPASS( 15, 1, 0, lb, sb, 0xffffffffffffffbc, 3, tdat )
TEST_ST_SRC12_BYPASS( 16, 1, 1, lb, sb, 0xffffffffffffffbb, 4, tdat )
TEST_ST_SRC12_BYPASS( 17, 2, 0, lb, sb, 0xffffffffffffffab, 5, tdat )
TEST_ST_SRC21_BYPASS( 18, 0, 0, lb, sb, 0x33, 0, tdat )
TEST_ST_SRC21_BYPASS( 19, 0, 1, lb, sb, 0x23, 1, tdat )
TEST_ST_SRC21_BYPASS( 20, 0, 2, lb, sb, 0x22, 2, tdat )
TEST_ST_SRC21_BYPASS( 21, 1, 0, lb, sb, 0x12, 3, tdat )
TEST_ST_SRC21_BYPASS( 22, 1, 1, lb, sb, 0x11, 4, tdat )
TEST_ST_SRC21_BYPASS( 23, 2, 0, lb, sb, 0x01, 5, tdat )
TEST_ST_OP( 2, ld, sd, 0x00aa00aa00aa00aa, 0,  tdat )
TEST_ST_OP( 3, ld, sd, 0xaa00aa00aa00aa00, 8,  tdat )
TEST_ST_OP( 4, ld, sd, 0x0aa00aa00aa00aa0, 16,  tdat )
TEST_ST_OP( 5, ld, sd, 0xa00aa00aa00aa00a, 24, tdat )
TEST_ST_OP( 6, ld, sd, 0x00aa00aa00aa00aa, -24, tdat8 )
TEST_ST_OP( 7, ld, sd, 0xaa00aa00aa00aa00, -16, tdat8 )
TEST_ST_OP( 8, ld, sd, 0x0aa00aa00aa00aa0, -8,  tdat8 )
TEST_ST_OP( 9, ld, sd, 0xa00aa00aa00aa00a, 0,   tdat8 )
TEST_ST_SRC12_BYPASS( 12, 0, 0, ld, sd, 0xabbccdd, 0,  tdat )
TEST_ST_SRC12_BYPASS( 13, 0, 1, ld, sd, 0xaabbccd, 8,  tdat )
TEST_ST_SRC12_BYPASS( 14, 0, 2, ld, sd, 0xdaabbcc, 16, tdat )
TEST_ST_SRC12_BYPASS( 15, 1, 0, ld, sd, 0xddaabbc, 24, tdat )
TEST_ST_SRC12_BYPASS( 16, 1, 1, ld, sd, 0xcddaabb, 32, tdat )
TEST_ST_SRC12_BYPASS( 17, 2, 0, ld, sd, 0xccddaab, 40, tdat )
TEST_ST_SRC21_BYPASS( 18, 0, 0, ld, sd, 0x00112233, 0,  tdat )
TEST_ST_SRC21_BYPASS( 19, 0, 1, ld, sd, 0x30011223, 8,  tdat )
TEST_ST_SRC21_BYPASS( 20, 0, 2, ld, sd, 0x33001122, 16, tdat )
TEST_ST_SRC21_BYPASS( 21, 1, 0, ld, sd, 0x23300112, 24, tdat )
TEST_ST_SRC21_BYPASS( 22, 1, 1, ld, sd, 0x22330011, 32, tdat )
TEST_ST_SRC21_BYPASS( 23, 2, 0, ld, sd, 0x12233001, 40, tdat )
TEST_ST_OP( 2, lh, sh, 0x00000000000000aa, 0, tdat )
TEST_ST_OP( 3, lh, sh, 0xffffffffffffaa00, 2, tdat )
// TEST_ST_OP( 4, lw, sh, 0xffffffffbeef0aa0, 4, tdat )
TEST_ST_OP( 5, lh, sh, 0xffffffffffffa00a, 6, tdat )
TEST_ST_OP( 6, lh, sh, 0x00000000000000aa, -6, tdat8 )
TEST_ST_OP( 7, lh, sh, 0xffffffffffffaa00, -4, tdat8 )
TEST_ST_OP( 8, lh, sh, 0x0000000000000aa0, -2, tdat8 )
TEST_ST_OP( 9, lh, sh, 0xffffffffffffa00a, 0,  tdat8 )
TEST_ST_SRC12_BYPASS( 12, 0, 0, lh, sh, 0xffffffffffffccdd, 0,  tdat )
TEST_ST_SRC12_BYPASS( 13, 0, 1, lh, sh, 0xffffffffffffbccd, 2,  tdat )
TEST_ST_SRC12_BYPASS( 14, 0, 2, lh, sh, 0xffffffffffffbbcc, 4,  tdat )
TEST_ST_SRC12_BYPASS( 15, 1, 0, lh, sh, 0xffffffffffffabbc, 6, tdat )
TEST_ST_SRC12_BYPASS( 16, 1, 1, lh, sh, 0xffffffffffffaabb, 8, tdat )
TEST_ST_SRC12_BYPASS( 17, 2, 0, lh, sh, 0xffffffffffffdaab, 10, tdat )
TEST_ST_SRC21_BYPASS( 18, 0, 0, lh, sh, 0x2233, 0,  tdat )
TEST_ST_SRC21_BYPASS( 19, 0, 1, lh, sh, 0x1223, 2,  tdat )
TEST_ST_SRC21_BYPASS( 20, 0, 2, lh, sh, 0x1122, 4,  tdat )
TEST_ST_SRC21_BYPASS( 21, 1, 0, lh, sh, 0x0112, 6, tdat )
TEST_ST_SRC21_BYPASS( 22, 1, 1, lh, sh, 0x0011, 8, tdat )
TEST_ST_SRC21_BYPASS( 23, 2, 0, lh, sh, 0x3001, 10, tdat )
TEST_IMM_OP( 2,  slli, 0x0000000000000001, 0x0000000000000001, 0  )
TEST_IMM_OP( 3,  slli, 0x0000000000000002, 0x0000000000000001, 1  )
TEST_IMM_OP( 4,  slli, 0x0000000000000080, 0x0000000000000001, 7  )
TEST_IMM_OP( 5,  slli, 0x0000000000004000, 0x0000000000000001, 14 )
TEST_IMM_OP( 6,  slli, 0x0000000080000000, 0x0000000000000001, 31 )
TEST_IMM_OP( 7,  slli, 0xffffffffffffffff, 0xffffffffffffffff, 0  )
TEST_IMM_OP( 8,  slli, 0xfffffffffffffffe, 0xffffffffffffffff, 1  )
TEST_IMM_OP( 9,  slli, 0xffffffffffffff80, 0xffffffffffffffff, 7  )
TEST_IMM_OP( 10, slli, 0xffffffffffffc000, 0xffffffffffffffff, 14 )
TEST_IMM_OP( 11, slli, 0xffffffff80000000, 0xffffffffffffffff, 31 )
TEST_IMM_OP( 12, slli, 0x0000000021212121, 0x0000000021212121, 0  )
TEST_IMM_OP( 13, slli, 0x0000000042424242, 0x0000000021212121, 1  )
TEST_IMM_OP( 14, slli, 0x0000001090909080, 0x0000000021212121, 7  )
TEST_IMM_OP( 15, slli, 0x0000084848484000, 0x0000000021212121, 14 )
TEST_IMM_OP( 16, slli, 0x1090909080000000, 0x0000000021212121, 31 )
TEST_IMM_OP( 50, slli, 0x8000000000000000, 0x0000000000000001, 63 )
TEST_IMM_OP( 51, slli, 0xffffff8000000000, 0xffffffffffffffff, 39 )
TEST_IMM_OP( 52, slli, 0x0909080000000000, 0x0000000021212121, 43 )
TEST_IMM_SRC1_EQ_DEST( 17, slli, 0x00000080, 0x00000001, 7 )
TEST_IMM_DEST_BYPASS( 18, 0, slli, 0x0000000000000080, 0x0000000000000001, 7  )
TEST_IMM_DEST_BYPASS( 19, 1, slli, 0x0000000000004000, 0x0000000000000001, 14 )
TEST_IMM_DEST_BYPASS( 20, 2, slli, 0x0000000080000000, 0x0000000000000001, 31 )
TEST_IMM_SRC1_BYPASS( 21, 0, slli, 0x0000000000000080, 0x0000000000000001, 7  )
TEST_IMM_SRC1_BYPASS( 22, 1, slli, 0x0000000000004000, 0x0000000000000001, 14 )
TEST_IMM_SRC1_BYPASS( 23, 2, slli, 0x0000000080000000, 0x0000000000000001, 31 )
TEST_IMM_ZEROSRC1( 24, slli, 0, 31 )
TEST_IMM_ZERODEST( 25, slli, 33, 20 )
TEST_IMM_OP( 2,  slliw, 0x0000000000000001, 0x0000000000000001, 0  )
TEST_IMM_OP( 3,  slliw, 0x0000000000000002, 0x0000000000000001, 1  )
TEST_IMM_OP( 4,  slliw, 0x0000000000000080, 0x0000000000000001, 7  )
TEST_IMM_OP( 5,  slliw, 0x0000000000004000, 0x0000000000000001, 14 )
TEST_IMM_OP( 6,  slliw, 0xffffffff80000000, 0x0000000000000001, 31 )
TEST_IMM_OP( 7,  slliw, 0xffffffffffffffff, 0xffffffffffffffff, 0  )
TEST_IMM_OP( 8,  slliw, 0xfffffffffffffffe, 0xffffffffffffffff, 1  )
TEST_IMM_OP( 9,  slliw, 0xffffffffffffff80, 0xffffffffffffffff, 7  )
TEST_IMM_OP( 10, slliw, 0xffffffffffffc000, 0xffffffffffffffff, 14 )
TEST_IMM_OP( 11, slliw, 0xffffffff80000000, 0xffffffffffffffff, 31 )
TEST_IMM_OP( 12, slliw, 0x0000000021212121, 0x0000000021212121, 0  )
TEST_IMM_OP( 13, slliw, 0x0000000042424242, 0x0000000021212121, 1  )
TEST_IMM_OP( 14, slliw, 0xffffffff90909080, 0x0000000021212121, 7  )
TEST_IMM_OP( 15, slliw, 0x0000000048484000, 0x0000000021212121, 14 )
TEST_IMM_OP( 16, slliw, 0xffffffff80000000, 0x0000000021212121, 31 )
TEST_IMM_OP( 44, slliw, 0x0000000012345678, 0xffffffff12345678, 0 )
TEST_IMM_OP( 45, slliw, 0x0000000023456780, 0xffffffff12345678, 4 )
TEST_IMM_OP( 46, slliw, 0xffffffff92345678, 0x0000000092345678, 0 )
TEST_IMM_OP( 47, slliw, 0xffffffff93456780, 0x0000000099345678, 4 )
TEST_IMM_SRC1_EQ_DEST( 17, slliw, 0x00000080, 0x00000001, 7 )
TEST_IMM_DEST_BYPASS( 18, 0, slliw, 0x0000000000000080, 0x0000000000000001, 7  )
TEST_IMM_DEST_BYPASS( 19, 1, slliw, 0x0000000000004000, 0x0000000000000001, 14 )
TEST_IMM_DEST_BYPASS( 20, 2, slliw, 0xffffffff80000000, 0x0000000000000001, 31 )
TEST_IMM_SRC1_BYPASS( 21, 0, slliw, 0x0000000000000080, 0x0000000000000001, 7  )
TEST_IMM_SRC1_BYPASS( 22, 1, slliw, 0x0000000000004000, 0x0000000000000001, 14 )
TEST_IMM_SRC1_BYPASS( 23, 2, slliw, 0xffffffff80000000, 0x0000000000000001, 31 )
TEST_IMM_ZEROSRC1( 24, slliw, 0, 31 )
TEST_IMM_ZERODEST( 25, slliw, 31, 28 )
TEST_RR_OP( 2,  sll, 0x0000000000000001, 0x0000000000000001, 0  )
TEST_RR_OP( 3,  sll, 0x0000000000000002, 0x0000000000000001, 1  )
TEST_RR_OP( 4,  sll, 0x0000000000000080, 0x0000000000000001, 7  )
TEST_RR_OP( 5,  sll, 0x0000000000004000, 0x0000000000000001, 14 )
TEST_RR_OP( 6,  sll, 0x0000000080000000, 0x0000000000000001, 31 )
TEST_RR_OP( 7,  sll, 0xffffffffffffffff, 0xffffffffffffffff, 0  )
TEST_RR_OP( 8,  sll, 0xfffffffffffffffe, 0xffffffffffffffff, 1  )
TEST_RR_OP( 9,  sll, 0xffffffffffffff80, 0xffffffffffffffff, 7  )
TEST_RR_OP( 10, sll, 0xffffffffffffc000, 0xffffffffffffffff, 14 )
TEST_RR_OP( 11, sll, 0xffffffff80000000, 0xffffffffffffffff, 31 )
TEST_RR_OP( 12, sll, 0x0000000021212121, 0x0000000021212121, 0  )
TEST_RR_OP( 13, sll, 0x0000000042424242, 0x0000000021212121, 1  )
TEST_RR_OP( 14, sll, 0x0000001090909080, 0x0000000021212121, 7  )
TEST_RR_OP( 15, sll, 0x0000084848484000, 0x0000000021212121, 14 )
TEST_RR_OP( 16, sll, 0x1090909080000000, 0x0000000021212121, 31 )
TEST_RR_OP( 17, sll, 0x0000000021212121, 0x0000000021212121, 0xffffffffffffffc0 )
TEST_RR_OP( 18, sll, 0x0000000042424242, 0x0000000021212121, 0xffffffffffffffc1 )
TEST_RR_OP( 19, sll, 0x0000001090909080, 0x0000000021212121, 0xffffffffffffffc7 )
TEST_RR_OP( 20, sll, 0x0000084848484000, 0x0000000021212121, 0xffffffffffffffce )
TEST_RR_OP( 21, sll, 0x8000000000000000, 0x0000000021212121, 0xffffffffffffffff )
TEST_RR_OP( 50, sll, 0x8000000000000000, 0x0000000000000001, 63 )
TEST_RR_OP( 51, sll, 0xffffff8000000000, 0xffffffffffffffff, 39 )
TEST_RR_OP( 52, sll, 0x0909080000000000, 0x0000000021212121, 43 )
TEST_RR_SRC1_EQ_DEST( 22, sll, 0x00000080, 0x00000001, 7  )
TEST_RR_SRC2_EQ_DEST( 23, sll, 0x00004000, 0x00000001, 14 )
TEST_RR_SRC12_EQ_DEST( 24, sll, 24, 3 )
TEST_RR_DEST_BYPASS( 25, 0, sll, 0x0000000000000080, 0x0000000000000001, 7  )
TEST_RR_DEST_BYPASS( 26, 1, sll, 0x0000000000004000, 0x0000000000000001, 14 )
TEST_RR_DEST_BYPASS( 27, 2, sll, 0x0000000080000000, 0x0000000000000001, 31 )
TEST_RR_SRC12_BYPASS( 28, 0, 0, sll, 0x0000000000000080, 0x0000000000000001, 7  )
TEST_RR_SRC12_BYPASS( 29, 0, 1, sll, 0x0000000000004000, 0x0000000000000001, 14 )
TEST_RR_SRC12_BYPASS( 30, 0, 2, sll, 0x0000000080000000, 0x0000000000000001, 31 )
TEST_RR_SRC12_BYPASS( 31, 1, 0, sll, 0x0000000000000080, 0x0000000000000001, 7  )
TEST_RR_SRC12_BYPASS( 32, 1, 1, sll, 0x0000000000004000, 0x0000000000000001, 14 )
TEST_RR_SRC12_BYPASS( 33, 2, 0, sll, 0x0000000080000000, 0x0000000000000001, 31 )
TEST_RR_SRC21_BYPASS( 34, 0, 0, sll, 0x0000000000000080, 0x0000000000000001, 7  )
TEST_RR_SRC21_BYPASS( 35, 0, 1, sll, 0x0000000000004000, 0x0000000000000001, 14 )
TEST_RR_SRC21_BYPASS( 36, 0, 2, sll, 0x0000000080000000, 0x0000000000000001, 31 )
TEST_RR_SRC21_BYPASS( 37, 1, 0, sll, 0x0000000000000080, 0x0000000000000001, 7  )
TEST_RR_SRC21_BYPASS( 38, 1, 1, sll, 0x0000000000004000, 0x0000000000000001, 14 )
TEST_RR_SRC21_BYPASS( 39, 2, 0, sll, 0x0000000080000000, 0x0000000000000001, 31 )
TEST_RR_ZEROSRC1( 40, sll, 0, 15 )
TEST_RR_ZEROSRC2( 41, sll, 32, 32 )
TEST_RR_ZEROSRC12( 42, sll, 0 )
TEST_RR_ZERODEST( 43, sll, 1024, 2048 )
TEST_RR_OP( 2,  sllw, 0x0000000000000001, 0x0000000000000001, 0  )
TEST_RR_OP( 3,  sllw, 0x0000000000000002, 0x0000000000000001, 1  )
TEST_RR_OP( 4,  sllw, 0x0000000000000080, 0x0000000000000001, 7  )
TEST_RR_OP( 5,  sllw, 0x0000000000004000, 0x0000000000000001, 14 )
TEST_RR_OP( 6,  sllw, 0xffffffff80000000, 0x0000000000000001, 31 )
TEST_RR_OP( 7,  sllw, 0xffffffffffffffff, 0xffffffffffffffff, 0  )
TEST_RR_OP( 8,  sllw, 0xfffffffffffffffe, 0xffffffffffffffff, 1  )
TEST_RR_OP( 9,  sllw, 0xffffffffffffff80, 0xffffffffffffffff, 7  )
TEST_RR_OP( 10, sllw, 0xffffffffffffc000, 0xffffffffffffffff, 14 )
TEST_RR_OP( 11, sllw, 0xffffffff80000000, 0xffffffffffffffff, 31 )
TEST_RR_OP( 12, sllw, 0x0000000021212121, 0x0000000021212121, 0  )
TEST_RR_OP( 13, sllw, 0x0000000042424242, 0x0000000021212121, 1  )
TEST_RR_OP( 14, sllw, 0xffffffff90909080, 0x0000000021212121, 7  )
TEST_RR_OP( 15, sllw, 0x0000000048484000, 0x0000000021212121, 14 )
TEST_RR_OP( 16, sllw, 0xffffffff80000000, 0x0000000021212121, 31 )
TEST_RR_OP( 17, sllw, 0x0000000021212121, 0x0000000021212121, 0xffffffffffffffe0 )
TEST_RR_OP( 18, sllw, 0x0000000042424242, 0x0000000021212121, 0xffffffffffffffe1 )
TEST_RR_OP( 19, sllw, 0xffffffff90909080, 0x0000000021212121, 0xffffffffffffffe7 )
TEST_RR_OP( 20, sllw, 0x0000000048484000, 0x0000000021212121, 0xffffffffffffffee )
TEST_RR_OP( 21, sllw, 0xffffffff80000000, 0x0000000021212121, 0xffffffffffffffff )
TEST_RR_OP( 44, sllw, 0x0000000012345678, 0xffffffff12345678, 0 )
TEST_RR_OP( 45, sllw, 0x0000000023456780, 0xffffffff12345678, 4 )
TEST_RR_OP( 46, sllw, 0xffffffff92345678, 0x0000000092345678, 0 )
TEST_RR_OP( 47, sllw, 0xffffffff93456780, 0x0000000099345678, 4 )
TEST_RR_SRC1_EQ_DEST( 22, sllw, 0x00000080, 0x00000001, 7  )
TEST_RR_SRC2_EQ_DEST( 23, sllw, 0x00004000, 0x00000001, 14 )
TEST_RR_SRC12_EQ_DEST( 24, sllw, 24, 3 )
TEST_RR_DEST_BYPASS( 25, 0, sllw, 0x0000000000000080, 0x0000000000000001, 7  )
TEST_RR_DEST_BYPASS( 26, 1, sllw, 0x0000000000004000, 0x0000000000000001, 14 )
TEST_RR_DEST_BYPASS( 27, 2, sllw, 0xffffffff80000000, 0x0000000000000001, 31 )
TEST_RR_SRC12_BYPASS( 28, 0, 0, sllw, 0x0000000000000080, 0x0000000000000001, 7  )
TEST_RR_SRC12_BYPASS( 29, 0, 1, sllw, 0x0000000000004000, 0x0000000000000001, 14 )
TEST_RR_SRC12_BYPASS( 30, 0, 2, sllw, 0xffffffff80000000, 0x0000000000000001, 31 )
TEST_RR_SRC12_BYPASS( 31, 1, 0, sllw, 0x0000000000000080, 0x0000000000000001, 7  )
TEST_RR_SRC12_BYPASS( 32, 1, 1, sllw, 0x0000000000004000, 0x0000000000000001, 14 )
TEST_RR_SRC12_BYPASS( 33, 2, 0, sllw, 0xffffffff80000000, 0x0000000000000001, 31 )
TEST_RR_SRC21_BYPASS( 34, 0, 0, sllw, 0x0000000000000080, 0x0000000000000001, 7  )
TEST_RR_SRC21_BYPASS( 35, 0, 1, sllw, 0x0000000000004000, 0x0000000000000001, 14 )
TEST_RR_SRC21_BYPASS( 36, 0, 2, sllw, 0xffffffff80000000, 0x0000000000000001, 31 )
TEST_RR_SRC21_BYPASS( 37, 1, 0, sllw, 0x0000000000000080, 0x0000000000000001, 7  )
TEST_RR_SRC21_BYPASS( 38, 1, 1, sllw, 0x0000000000004000, 0x0000000000000001, 14 )
TEST_RR_SRC21_BYPASS( 39, 2, 0, sllw, 0xffffffff80000000, 0x0000000000000001, 31 )
TEST_RR_ZEROSRC1( 40, sllw, 0, 15 )
TEST_RR_ZEROSRC2( 41, sllw, 32, 32 )
TEST_RR_ZEROSRC12( 42, sllw, 0 )
TEST_RR_ZERODEST( 43, sllw, 1024, 2048 )
TEST_IMM_OP( 2,  slti, 0, 0x0000000000000000, 0x000 )
TEST_IMM_OP( 3,  slti, 0, 0x0000000000000001, 0x001 )
TEST_IMM_OP( 4,  slti, 1, 0x0000000000000003, 0x007 )
TEST_IMM_OP( 5,  slti, 0, 0x0000000000000007, 0x003 )
TEST_IMM_OP( 6,  slti, 0, 0x0000000000000000, 0x800 )
TEST_IMM_OP( 7,  slti, 1, 0xffffffff80000000, 0x000 )
TEST_IMM_OP( 8,  slti, 1, 0xffffffff80000000, 0x800 )
TEST_IMM_OP( 9,  slti, 1, 0x0000000000000000, 0x7ff )
TEST_IMM_OP( 10, slti, 0, 0x000000007fffffff, 0x000 )
TEST_IMM_OP( 11, slti, 0, 0x000000007fffffff, 0x7ff )
TEST_IMM_OP( 12, slti, 1, 0xffffffff80000000, 0x7ff )
TEST_IMM_OP( 13, slti, 0, 0x000000007fffffff, 0x800 )
TEST_IMM_OP( 14, slti, 0, 0x0000000000000000, 0xfff )
TEST_IMM_OP( 15, slti, 1, 0xffffffffffffffff, 0x001 )
TEST_IMM_OP( 16, slti, 0, 0xffffffffffffffff, 0xfff )
TEST_IMM_SRC1_EQ_DEST( 17, slti, 1, 11, 13 )
TEST_IMM_DEST_BYPASS( 18, 0, slti, 0, 15, 10 )
TEST_IMM_DEST_BYPASS( 19, 1, slti, 1, 10, 16 )
TEST_IMM_DEST_BYPASS( 20, 2, slti, 0, 16,  9 )
TEST_IMM_SRC1_BYPASS( 21, 0, slti, 1, 11, 15 )
TEST_IMM_SRC1_BYPASS( 22, 1, slti, 0, 17,  8 )
TEST_IMM_SRC1_BYPASS( 23, 2, slti, 1, 12, 14 )
TEST_IMM_ZEROSRC1( 24, slti, 0, 0xfff )
TEST_IMM_ZERODEST( 25, slti, 0x00ff00ff, 0xfff )
TEST_IMM_OP( 2,  sltiu, 0, 0x0000000000000000, 0x000 )
TEST_IMM_OP( 3,  sltiu, 0, 0x0000000000000001, 0x001 )
TEST_IMM_OP( 4,  sltiu, 1, 0x0000000000000003, 0x007 )
TEST_IMM_OP( 5,  sltiu, 0, 0x0000000000000007, 0x003 )
TEST_IMM_OP( 6,  sltiu, 1, 0x0000000000000000, 0x800 )
TEST_IMM_OP( 7,  sltiu, 0, 0xffffffff80000000, 0x000 )
TEST_IMM_OP( 8,  sltiu, 1, 0xffffffff80000000, 0x800 )
TEST_IMM_OP( 9,  sltiu, 1, 0x0000000000000000, 0x7ff )
TEST_IMM_OP( 10, sltiu, 0, 0x000000007fffffff, 0x000 )
TEST_IMM_OP( 11, sltiu, 0, 0x000000007fffffff, 0x7ff )
TEST_IMM_OP( 12, sltiu, 0, 0xffffffff80000000, 0x7ff )
TEST_IMM_OP( 13, sltiu, 1, 0x000000007fffffff, 0x800 )
TEST_IMM_OP( 14, sltiu, 1, 0x0000000000000000, 0xfff )
TEST_IMM_OP( 15, sltiu, 0, 0xffffffffffffffff, 0x001 )
TEST_IMM_OP( 16, sltiu, 0, 0xffffffffffffffff, 0xfff )
TEST_IMM_SRC1_EQ_DEST( 17, sltiu, 1, 11, 13 )
TEST_IMM_DEST_BYPASS( 18, 0, sltiu, 0, 15, 10 )
TEST_IMM_DEST_BYPASS( 19, 1, sltiu, 1, 10, 16 )
TEST_IMM_DEST_BYPASS( 20, 2, sltiu, 0, 16,  9 )
TEST_IMM_SRC1_BYPASS( 21, 0, sltiu, 1, 11, 15 )
TEST_IMM_SRC1_BYPASS( 22, 1, sltiu, 0, 17,  8 )
TEST_IMM_SRC1_BYPASS( 23, 2, sltiu, 1, 12, 14 )
TEST_IMM_ZEROSRC1( 24, sltiu, 1, 0xfff )
TEST_IMM_ZERODEST( 25, sltiu, 0x00ff00ff, 0xfff )
TEST_RR_OP( 2,  slt, 0, 0x0000000000000000, 0x0000000000000000 )
TEST_RR_OP( 3,  slt, 0, 0x0000000000000001, 0x0000000000000001 )
TEST_RR_OP( 4,  slt, 1, 0x0000000000000003, 0x0000000000000007 )
TEST_RR_OP( 5,  slt, 0, 0x0000000000000007, 0x0000000000000003 )
TEST_RR_OP( 6,  slt, 0, 0x0000000000000000, 0xffffffffffff8000 )
TEST_RR_OP( 7,  slt, 1, 0xffffffff80000000, 0x0000000000000000 )
TEST_RR_OP( 8,  slt, 1, 0xffffffff80000000, 0xffffffffffff8000 )
TEST_RR_OP( 9,  slt, 1, 0x0000000000000000, 0x0000000000007fff )
TEST_RR_OP( 10, slt, 0, 0x000000007fffffff, 0x0000000000000000 )
TEST_RR_OP( 11, slt, 0, 0x000000007fffffff, 0x0000000000007fff )
TEST_RR_OP( 12, slt, 1, 0xffffffff80000000, 0x0000000000007fff )
TEST_RR_OP( 13, slt, 0, 0x000000007fffffff, 0xffffffffffff8000 )
TEST_RR_OP( 14, slt, 0, 0x0000000000000000, 0xffffffffffffffff )
TEST_RR_OP( 15, slt, 1, 0xffffffffffffffff, 0x0000000000000001 )
TEST_RR_OP( 16, slt, 0, 0xffffffffffffffff, 0xffffffffffffffff )
TEST_RR_SRC1_EQ_DEST( 17, slt, 0, 14, 13 )
TEST_RR_SRC2_EQ_DEST( 18, slt, 1, 11, 13 )
TEST_RR_SRC12_EQ_DEST( 19, slt, 0, 13 )
TEST_RR_DEST_BYPASS( 20, 0, slt, 1, 11, 13 )
TEST_RR_DEST_BYPASS( 21, 1, slt, 0, 14, 13 )
TEST_RR_DEST_BYPASS( 22, 2, slt, 1, 12, 13 )
TEST_RR_SRC12_BYPASS( 23, 0, 0, slt, 0, 14, 13 )
TEST_RR_SRC12_BYPASS( 24, 0, 1, slt, 1, 11, 13 )
TEST_RR_SRC12_BYPASS( 25, 0, 2, slt, 0, 15, 13 )
TEST_RR_SRC12_BYPASS( 26, 1, 0, slt, 1, 10, 13 )
TEST_RR_SRC12_BYPASS( 27, 1, 1, slt, 0, 16, 13 )
TEST_RR_SRC12_BYPASS( 28, 2, 0, slt, 1,  9, 13 )
TEST_RR_SRC21_BYPASS( 29, 0, 0, slt, 0, 17, 13 )
TEST_RR_SRC21_BYPASS( 30, 0, 1, slt, 1,  8, 13 )
TEST_RR_SRC21_BYPASS( 31, 0, 2, slt, 0, 18, 13 )
TEST_RR_SRC21_BYPASS( 32, 1, 0, slt, 1,  7, 13 )
TEST_RR_SRC21_BYPASS( 33, 1, 1, slt, 0, 19, 13 )
TEST_RR_SRC21_BYPASS( 34, 2, 0, slt, 1,  6, 13 )
TEST_RR_ZEROSRC1( 35, slt, 0, -1 )
TEST_RR_ZEROSRC2( 36, slt, 1, -1 )
TEST_RR_ZEROSRC12( 37, slt, 0 )
TEST_RR_ZERODEST( 38, slt, 16, 30 )
TEST_RR_OP( 2,  sltu, 0, 0x00000000, 0x00000000 )
TEST_RR_OP( 3,  sltu, 0, 0x00000001, 0x00000001 )
TEST_RR_OP( 4,  sltu, 1, 0x00000003, 0x00000007 )
TEST_RR_OP( 5,  sltu, 0, 0x00000007, 0x00000003 )
TEST_RR_OP( 6,  sltu, 1, 0x00000000, 0xffff8000 )
TEST_RR_OP( 7,  sltu, 0, 0x80000000, 0x00000000 )
TEST_RR_OP( 8,  sltu, 1, 0x80000000, 0xffff8000 )
TEST_RR_OP( 9,  sltu, 1, 0x00000000, 0x00007fff )
TEST_RR_OP( 10, sltu, 0, 0x7fffffff, 0x00000000 )
TEST_RR_OP( 11, sltu, 0, 0x7fffffff, 0x00007fff )
TEST_RR_OP( 12, sltu, 0, 0x80000000, 0x00007fff )
TEST_RR_OP( 13, sltu, 1, 0x7fffffff, 0xffff8000 )
TEST_RR_OP( 14, sltu, 1, 0x00000000, 0xffffffff )
TEST_RR_OP( 15, sltu, 0, 0xffffffff, 0x00000001 )
TEST_RR_OP( 16, sltu, 0, 0xffffffff, 0xffffffff )
TEST_RR_SRC1_EQ_DEST( 17, sltu, 0, 14, 13 )
TEST_RR_SRC2_EQ_DEST( 18, sltu, 1, 11, 13 )
TEST_RR_SRC12_EQ_DEST( 19, sltu, 0, 13 )
TEST_RR_DEST_BYPASS( 20, 0, sltu, 1, 11, 13 )
TEST_RR_DEST_BYPASS( 21, 1, sltu, 0, 14, 13 )
TEST_RR_DEST_BYPASS( 22, 2, sltu, 1, 12, 13 )
TEST_RR_SRC12_BYPASS( 23, 0, 0, sltu, 0, 14, 13 )
TEST_RR_SRC12_BYPASS( 24, 0, 1, sltu, 1, 11, 13 )
TEST_RR_SRC12_BYPASS( 25, 0, 2, sltu, 0, 15, 13 )
TEST_RR_SRC12_BYPASS( 26, 1, 0, sltu, 1, 10, 13 )
TEST_RR_SRC12_BYPASS( 27, 1, 1, sltu, 0, 16, 13 )
TEST_RR_SRC12_BYPASS( 28, 2, 0, sltu, 1,  9, 13 )
TEST_RR_SRC21_BYPASS( 29, 0, 0, sltu, 0, 17, 13 )
TEST_RR_SRC21_BYPASS( 30, 0, 1, sltu, 1,  8, 13 )
TEST_RR_SRC21_BYPASS( 31, 0, 2, sltu, 0, 18, 13 )
TEST_RR_SRC21_BYPASS( 32, 1, 0, sltu, 1,  7, 13 )
TEST_RR_SRC21_BYPASS( 33, 1, 1, sltu, 0, 19, 13 )
TEST_RR_SRC21_BYPASS( 34, 2, 0, sltu, 1,  6, 13 )
TEST_RR_ZEROSRC1( 35, sltu, 1, -1 )
TEST_RR_ZEROSRC2( 36, sltu, 0, -1 )
TEST_RR_ZEROSRC12( 37, sltu, 0 )
TEST_RR_ZERODEST( 38, sltu, 16, 30 )
TEST_IMM_OP( 2,  srai, 0xffffff8000000000, 0xffffff8000000000, 0  )
TEST_IMM_OP( 3,  srai, 0xffffffffc0000000, 0xffffffff80000000, 1  )
TEST_IMM_OP( 4,  srai, 0xffffffffff000000, 0xffffffff80000000, 7  )
TEST_IMM_OP( 5,  srai, 0xfffffffffffe0000, 0xffffffff80000000, 14 )
TEST_IMM_OP( 6,  srai, 0xffffffffffffffff, 0xffffffff80000001, 31 )
TEST_IMM_OP( 7,  srai, 0x000000007fffffff, 0x000000007fffffff, 0  )
TEST_IMM_OP( 8,  srai, 0x000000003fffffff, 0x000000007fffffff, 1  )
TEST_IMM_OP( 9,  srai, 0x0000000000ffffff, 0x000000007fffffff, 7  )
TEST_IMM_OP( 10, srai, 0x000000000001ffff, 0x000000007fffffff, 14 )
TEST_IMM_OP( 11, srai, 0x0000000000000000, 0x000000007fffffff, 31 )
TEST_IMM_OP( 12, srai, 0xffffffff81818181, 0xffffffff81818181, 0  )
TEST_IMM_OP( 13, srai, 0xffffffffc0c0c0c0, 0xffffffff81818181, 1  )
TEST_IMM_OP( 14, srai, 0xffffffffff030303, 0xffffffff81818181, 7  )
TEST_IMM_OP( 15, srai, 0xfffffffffffe0606, 0xffffffff81818181, 14 )
TEST_IMM_OP( 16, srai, 0xffffffffffffffff, 0xffffffff81818181, 31 )
TEST_IMM_SRC1_EQ_DEST( 17, srai, 0xffffffffff000000, 0xffffffff80000000, 7 )
TEST_IMM_DEST_BYPASS( 18, 0, srai, 0xffffffffff000000, 0xffffffff80000000, 7  )
TEST_IMM_DEST_BYPASS( 19, 1, srai, 0xfffffffffffe0000, 0xffffffff80000000, 14 )
TEST_IMM_DEST_BYPASS( 20, 2, srai, 0xffffffffffffffff, 0xffffffff80000001, 31 )
TEST_IMM_SRC1_BYPASS( 21, 0, srai, 0xffffffffff000000, 0xffffffff80000000, 7 )
TEST_IMM_SRC1_BYPASS( 22, 1, srai, 0xfffffffffffe0000, 0xffffffff80000000, 14 )
TEST_IMM_SRC1_BYPASS( 23, 2, srai, 0xffffffffffffffff, 0xffffffff80000001, 31 )
TEST_IMM_ZEROSRC1( 24, srai, 0, 4 )
TEST_IMM_ZERODEST( 25, srai, 33, 10 )
TEST_IMM_OP( 2,  sraiw, 0xffffffff80000000, 0xffffffff80000000, 0  )
TEST_IMM_OP( 3,  sraiw, 0xffffffffc0000000, 0xffffffff80000000, 1  )
TEST_IMM_OP( 4,  sraiw, 0xffffffffff000000, 0xffffffff80000000, 7  )
TEST_IMM_OP( 5,  sraiw, 0xfffffffffffe0000, 0xffffffff80000000, 14 )
TEST_IMM_OP( 6,  sraiw, 0xffffffffffffffff, 0xffffffff80000001, 31 )
TEST_IMM_OP( 7,  sraiw, 0x000000007fffffff, 0x000000007fffffff, 0  )
TEST_IMM_OP( 8,  sraiw, 0x000000003fffffff, 0x000000007fffffff, 1  )
TEST_IMM_OP( 9,  sraiw, 0x0000000000ffffff, 0x000000007fffffff, 7  )
TEST_IMM_OP( 10, sraiw, 0x000000000001ffff, 0x000000007fffffff, 14 )
TEST_IMM_OP( 11, sraiw, 0x0000000000000000, 0x000000007fffffff, 31 )
TEST_IMM_OP( 12, sraiw, 0xffffffff81818181, 0xffffffff81818181, 0  )
TEST_IMM_OP( 13, sraiw, 0xffffffffc0c0c0c0, 0xffffffff81818181, 1  )
TEST_IMM_OP( 14, sraiw, 0xffffffffff030303, 0xffffffff81818181, 7  )
TEST_IMM_OP( 15, sraiw, 0xfffffffffffe0606, 0xffffffff81818181, 14 )
TEST_IMM_OP( 16, sraiw, 0xffffffffffffffff, 0xffffffff81818181, 31 )
TEST_IMM_OP( 44, sraiw, 0x0000000012345678, 0xffffffff12345678, 0 )
TEST_IMM_OP( 45, sraiw, 0x0000000001234567, 0xffffffff12345678, 4 )
TEST_IMM_OP( 46, sraiw, 0xffffffff92345678, 0x0000000092345678, 0 )
TEST_IMM_OP( 47, sraiw, 0xfffffffff9234567, 0x0000000092345678, 4 )
TEST_IMM_SRC1_EQ_DEST( 17, sraiw, 0xffffffffff000000, 0xffffffff80000000, 7 )
TEST_IMM_DEST_BYPASS( 18, 0, sraiw, 0xffffffffff000000, 0xffffffff80000000, 7  )
TEST_IMM_DEST_BYPASS( 19, 1, sraiw, 0xfffffffffffe0000, 0xffffffff80000000, 14 )
TEST_IMM_DEST_BYPASS( 20, 2, sraiw, 0xffffffffffffffff, 0xffffffff80000001, 31 )
TEST_IMM_SRC1_BYPASS( 21, 0, sraiw, 0xffffffffff000000, 0xffffffff80000000, 7 )
TEST_IMM_SRC1_BYPASS( 22, 1, sraiw, 0xfffffffffffe0000, 0xffffffff80000000, 14 )
TEST_IMM_SRC1_BYPASS( 23, 2, sraiw, 0xffffffffffffffff, 0xffffffff80000001, 31 )
TEST_IMM_ZEROSRC1( 24, sraiw, 0, 31 )
TEST_IMM_ZERODEST( 25, sraiw, 31, 28 )
TEST_IMM_OP( 26, sraiw, 0x0000000000000000, 0x00e0000000000000, 28)
TEST_IMM_OP( 27, sraiw, 0xffffffffff000000, 0x00000000f0000000, 4)
TEST_RR_OP( 2,  sra, 0xffffffff80000000, 0xffffffff80000000, 0  )
TEST_RR_OP( 3,  sra, 0xffffffffc0000000, 0xffffffff80000000, 1  )
TEST_RR_OP( 4,  sra, 0xffffffffff000000, 0xffffffff80000000, 7  )
TEST_RR_OP( 5,  sra, 0xfffffffffffe0000, 0xffffffff80000000, 14 )
TEST_RR_OP( 6,  sra, 0xffffffffffffffff, 0xffffffff80000001, 31 )
TEST_RR_OP( 7,  sra, 0x000000007fffffff, 0x000000007fffffff, 0  )
TEST_RR_OP( 8,  sra, 0x000000003fffffff, 0x000000007fffffff, 1  )
TEST_RR_OP( 9,  sra, 0x0000000000ffffff, 0x000000007fffffff, 7  )
TEST_RR_OP( 10, sra, 0x000000000001ffff, 0x000000007fffffff, 14 )
TEST_RR_OP( 11, sra, 0x0000000000000000, 0x000000007fffffff, 31 )
TEST_RR_OP( 12, sra, 0xffffffff81818181, 0xffffffff81818181, 0  )
TEST_RR_OP( 13, sra, 0xffffffffc0c0c0c0, 0xffffffff81818181, 1  )
TEST_RR_OP( 14, sra, 0xffffffffff030303, 0xffffffff81818181, 7  )
TEST_RR_OP( 15, sra, 0xfffffffffffe0606, 0xffffffff81818181, 14 )
TEST_RR_OP( 16, sra, 0xffffffffffffffff, 0xffffffff81818181, 31 )
TEST_RR_OP( 17, sra, 0xffffffff81818181, 0xffffffff81818181, 0xffffffffffffffc0 )
TEST_RR_OP( 18, sra, 0xffffffffc0c0c0c0, 0xffffffff81818181, 0xffffffffffffffc1 )
TEST_RR_OP( 19, sra, 0xffffffffff030303, 0xffffffff81818181, 0xffffffffffffffc7 )
TEST_RR_OP( 20, sra, 0xfffffffffffe0606, 0xffffffff81818181, 0xffffffffffffffce )
TEST_RR_OP( 21, sra, 0xffffffffffffffff, 0xffffffff81818181, 0xffffffffffffffff )
TEST_RR_SRC1_EQ_DEST( 22, sra, 0xffffffffff000000, 0xffffffff80000000, 7  )
TEST_RR_SRC2_EQ_DEST( 23, sra, 0xfffffffffffe0000, 0xffffffff80000000, 14 )
TEST_RR_SRC12_EQ_DEST( 24, sra, 0, 7 )
TEST_RR_DEST_BYPASS( 25, 0, sra, 0xffffffffff000000, 0xffffffff80000000, 7  )
TEST_RR_DEST_BYPASS( 26, 1, sra, 0xfffffffffffe0000, 0xffffffff80000000, 14 )
TEST_RR_DEST_BYPASS( 27, 2, sra, 0xffffffffffffffff, 0xffffffff80000000, 31 )
TEST_RR_SRC12_BYPASS( 28, 0, 0, sra, 0xffffffffff000000, 0xffffffff80000000, 7  )
TEST_RR_SRC12_BYPASS( 29, 0, 1, sra, 0xfffffffffffe0000, 0xffffffff80000000, 14 )
TEST_RR_SRC12_BYPASS( 30, 0, 2, sra, 0xffffffffffffffff, 0xffffffff80000000, 31 )
TEST_RR_SRC12_BYPASS( 31, 1, 0, sra, 0xffffffffff000000, 0xffffffff80000000, 7  )
TEST_RR_SRC12_BYPASS( 32, 1, 1, sra, 0xfffffffffffe0000, 0xffffffff80000000, 14 )
TEST_RR_SRC12_BYPASS( 33, 2, 0, sra, 0xffffffffffffffff, 0xffffffff80000000, 31 )
TEST_RR_SRC21_BYPASS( 34, 0, 0, sra, 0xffffffffff000000, 0xffffffff80000000, 7  )
TEST_RR_SRC21_BYPASS( 35, 0, 1, sra, 0xfffffffffffe0000, 0xffffffff80000000, 14 )
TEST_RR_SRC21_BYPASS( 36, 0, 2, sra, 0xffffffffffffffff, 0xffffffff80000000, 31 )
TEST_RR_SRC21_BYPASS( 37, 1, 0, sra, 0xffffffffff000000, 0xffffffff80000000, 7  )
TEST_RR_SRC21_BYPASS( 38, 1, 1, sra, 0xfffffffffffe0000, 0xffffffff80000000, 14 )
TEST_RR_SRC21_BYPASS( 39, 2, 0, sra, 0xffffffffffffffff, 0xffffffff80000000, 31 )
TEST_RR_ZEROSRC1( 40, sra, 0, 15 )
TEST_RR_ZEROSRC2( 41, sra, 32, 32 )
TEST_RR_ZEROSRC12( 42, sra, 0 )
TEST_RR_ZERODEST( 43, sra, 1024, 2048 )
TEST_RR_OP( 2,  sraw, 0xffffffff80000000, 0xffffffff80000000, 0  )
TEST_RR_OP( 3,  sraw, 0xffffffffc0000000, 0xffffffff80000000, 1  )
TEST_RR_OP( 4,  sraw, 0xffffffffff000000, 0xffffffff80000000, 7  )
TEST_RR_OP( 5,  sraw, 0xfffffffffffe0000, 0xffffffff80000000, 14 )
TEST_RR_OP( 6,  sraw, 0xffffffffffffffff, 0xffffffff80000001, 31 )
TEST_RR_OP( 7,  sraw, 0x000000007fffffff, 0x000000007fffffff, 0  )
TEST_RR_OP( 8,  sraw, 0x000000003fffffff, 0x000000007fffffff, 1  )
TEST_RR_OP( 9,  sraw, 0x0000000000ffffff, 0x000000007fffffff, 7  )
TEST_RR_OP( 10, sraw, 0x000000000001ffff, 0x000000007fffffff, 14 )
TEST_RR_OP( 11, sraw, 0x0000000000000000, 0x000000007fffffff, 31 )
TEST_RR_OP( 12, sraw, 0xffffffff81818181, 0xffffffff81818181, 0  )
TEST_RR_OP( 13, sraw, 0xffffffffc0c0c0c0, 0xffffffff81818181, 1  )
TEST_RR_OP( 14, sraw, 0xffffffffff030303, 0xffffffff81818181, 7  )
TEST_RR_OP( 15, sraw, 0xfffffffffffe0606, 0xffffffff81818181, 14 )
TEST_RR_OP( 16, sraw, 0xffffffffffffffff, 0xffffffff81818181, 31 )
TEST_RR_OP( 17, sraw, 0xffffffff81818181, 0xffffffff81818181, 0xffffffffffffffe0 )
TEST_RR_OP( 18, sraw, 0xffffffffc0c0c0c0, 0xffffffff81818181, 0xffffffffffffffe1 )
TEST_RR_OP( 19, sraw, 0xffffffffff030303, 0xffffffff81818181, 0xffffffffffffffe7 )
TEST_RR_OP( 20, sraw, 0xfffffffffffe0606, 0xffffffff81818181, 0xffffffffffffffee )
TEST_RR_OP( 21, sraw, 0xffffffffffffffff, 0xffffffff81818181, 0xffffffffffffffff )
TEST_RR_OP( 44, sraw, 0x0000000012345678, 0xffffffff12345678, 0 )
TEST_RR_OP( 45, sraw, 0x0000000001234567, 0xffffffff12345678, 4 )
TEST_RR_OP( 46, sraw, 0xffffffff92345678, 0x0000000092345678, 0 )
TEST_RR_OP( 47, sraw, 0xfffffffff9234567, 0x0000000092345678, 4 )
TEST_RR_SRC1_EQ_DEST( 22, sraw, 0xffffffffff000000, 0xffffffff80000000, 7  )
TEST_RR_SRC2_EQ_DEST( 23, sraw, 0xfffffffffffe0000, 0xffffffff80000000, 14 )
TEST_RR_SRC12_EQ_DEST( 24, sraw, 0, 7 )
TEST_RR_DEST_BYPASS( 25, 0, sraw, 0xffffffffff000000, 0xffffffff80000000, 7  )
TEST_RR_DEST_BYPASS( 26, 1, sraw, 0xfffffffffffe0000, 0xffffffff80000000, 14 )
TEST_RR_DEST_BYPASS( 27, 2, sraw, 0xffffffffffffffff, 0xffffffff80000000, 31 )
TEST_RR_SRC12_BYPASS( 28, 0, 0, sraw, 0xffffffffff000000, 0xffffffff80000000, 7  )
TEST_RR_SRC12_BYPASS( 29, 0, 1, sraw, 0xfffffffffffe0000, 0xffffffff80000000, 14 )
TEST_RR_SRC12_BYPASS( 30, 0, 2, sraw, 0xffffffffffffffff, 0xffffffff80000000, 31 )
TEST_RR_SRC12_BYPASS( 31, 1, 0, sraw, 0xffffffffff000000, 0xffffffff80000000, 7  )
TEST_RR_SRC12_BYPASS( 32, 1, 1, sraw, 0xfffffffffffe0000, 0xffffffff80000000, 14 )
TEST_RR_SRC12_BYPASS( 33, 2, 0, sraw, 0xffffffffffffffff, 0xffffffff80000000, 31 )
TEST_RR_SRC21_BYPASS( 34, 0, 0, sraw, 0xffffffffff000000, 0xffffffff80000000, 7  )
TEST_RR_SRC21_BYPASS( 35, 0, 1, sraw, 0xfffffffffffe0000, 0xffffffff80000000, 14 )
TEST_RR_SRC21_BYPASS( 36, 0, 2, sraw, 0xffffffffffffffff, 0xffffffff80000000, 31 )
TEST_RR_SRC21_BYPASS( 37, 1, 0, sraw, 0xffffffffff000000, 0xffffffff80000000, 7  )
TEST_RR_SRC21_BYPASS( 38, 1, 1, sraw, 0xfffffffffffe0000, 0xffffffff80000000, 14 )
TEST_RR_SRC21_BYPASS( 39, 2, 0, sraw, 0xffffffffffffffff, 0xffffffff80000000, 31 )
TEST_RR_ZEROSRC1( 40, sraw, 0, 15 )
TEST_RR_ZEROSRC2( 41, sraw, 32, 32 )
TEST_RR_ZEROSRC12( 42, sraw, 0 )
TEST_RR_ZERODEST( 43, sraw, 1024, 2048 )
TEST_SRLI( 2,  0xffffffff80000000ULL, 0  )
TEST_SRLI( 3,  0xffffffff80000000ULL, 1  )
TEST_SRLI( 4,  0xffffffff80000000ULL, 7  )
TEST_SRLI( 5,  0xffffffff80000000ULL, 14 )
TEST_SRLI( 6,  0xffffffff80000001ULL, 31 )
TEST_SRLI( 7,  0xffffffffffffffffULL, 0  )
TEST_SRLI( 8,  0xffffffffffffffffULL, 1  )
TEST_SRLI( 9,  0xffffffffffffffffULL, 7  )
TEST_SRLI( 10, 0xffffffffffffffffULL, 14 )
TEST_SRLI( 11, 0xffffffffffffffffULL, 31 )
TEST_SRLI( 12, 0x0000000021212121ULL, 0  )
TEST_SRLI( 13, 0x0000000021212121ULL, 1  )
TEST_SRLI( 14, 0x0000000021212121ULL, 7  )
TEST_SRLI( 15, 0x0000000021212121ULL, 14 )
TEST_SRLI( 16, 0x0000000021212121ULL, 31 )
TEST_IMM_SRC1_EQ_DEST( 17, srli, 0x01000000, 0x80000000, 7 )
TEST_IMM_DEST_BYPASS( 18, 0, srli, 0x01000000, 0x80000000, 7  )
TEST_IMM_DEST_BYPASS( 19, 1, srli, 0x00020000, 0x80000000, 14 )
TEST_IMM_DEST_BYPASS( 20, 2, srli, 0x00000001, 0x80000001, 31 )
TEST_IMM_SRC1_BYPASS( 21, 0, srli, 0x01000000, 0x80000000, 7  )
TEST_IMM_SRC1_BYPASS( 22, 1, srli, 0x00020000, 0x80000000, 14 )
TEST_IMM_SRC1_BYPASS( 23, 2, srli, 0x00000001, 0x80000001, 31 )
TEST_IMM_ZEROSRC1( 24, srli, 0, 4 )
TEST_IMM_ZERODEST( 25, srli, 33, 10 )
TEST_IMM_OP( 2,  srliw, 0xffffffff80000000, 0xffffffff80000000, 0  )
TEST_IMM_OP( 3,  srliw, 0x0000000040000000, 0xffffffff80000000, 1  )
TEST_IMM_OP( 4,  srliw, 0x0000000001000000, 0xffffffff80000000, 7  )
TEST_IMM_OP( 5,  srliw, 0x0000000000020000, 0xffffffff80000000, 14 )
TEST_IMM_OP( 6,  srliw, 0x0000000000000001, 0xffffffff80000001, 31 )
TEST_IMM_OP( 7,  srliw, 0xffffffffffffffff, 0xffffffffffffffff, 0  )
TEST_IMM_OP( 8,  srliw, 0x000000007fffffff, 0xffffffffffffffff, 1  )
TEST_IMM_OP( 9,  srliw, 0x0000000001ffffff, 0xffffffffffffffff, 7  )
TEST_IMM_OP( 10, srliw, 0x000000000003ffff, 0xffffffffffffffff, 14 )
TEST_IMM_OP( 11, srliw, 0x0000000000000001, 0xffffffffffffffff, 31 )
TEST_IMM_OP( 12, srliw, 0x0000000021212121, 0x0000000021212121, 0  )
TEST_IMM_OP( 13, srliw, 0x0000000010909090, 0x0000000021212121, 1  )
TEST_IMM_OP( 14, srliw, 0x0000000000424242, 0x0000000021212121, 7  )
TEST_IMM_OP( 15, srliw, 0x0000000000008484, 0x0000000021212121, 14 )
TEST_IMM_OP( 16, srliw, 0x0000000000000000, 0x0000000021212121, 31 )
TEST_IMM_OP( 44, srliw, 0x0000000012345678, 0xffffffff12345678, 0 )
TEST_IMM_OP( 45, srliw, 0x0000000001234567, 0xffffffff12345678, 4 )
TEST_IMM_OP( 46, srliw, 0xffffffff92345678, 0x0000000092345678, 0 )
TEST_IMM_OP( 47, srliw, 0x0000000009234567, 0x0000000092345678, 4 )
TEST_IMM_SRC1_EQ_DEST( 17, srliw, 0x0000000001000000, 0xffffffff80000000, 7 )
TEST_IMM_DEST_BYPASS( 18, 0, srliw, 0x0000000001000000, 0xffffffff80000000, 7  )
TEST_IMM_DEST_BYPASS( 19, 1, srliw, 0x0000000000020000, 0xffffffff80000000, 14 )
TEST_IMM_DEST_BYPASS( 20, 2, srliw, 0x0000000000000001, 0xffffffff80000001, 31 )
TEST_IMM_SRC1_BYPASS( 21, 0, srliw, 0x0000000001000000, 0xffffffff80000000, 7  )
TEST_IMM_SRC1_BYPASS( 22, 1, srliw, 0x0000000000020000, 0xffffffff80000000, 14 )
TEST_IMM_SRC1_BYPASS( 23, 2, srliw, 0x0000000000000001, 0xffffffff80000001, 31 )
TEST_IMM_ZEROSRC1( 24, srliw, 0, 31 )
TEST_IMM_ZERODEST( 25, srliw, 31, 28 )
TEST_SRL( 2,  0xffffffff80000000ULL, 0  )
TEST_SRL( 3,  0xffffffff80000000ULL, 1  )
TEST_SRL( 4,  0xffffffff80000000ULL, 7  )
TEST_SRL( 5,  0xffffffff80000000ULL, 14 )
TEST_SRL( 6,  0xffffffff80000001ULL, 31 )
TEST_SRL( 7,  0xffffffffffffffffULL, 0  )
TEST_SRL( 8,  0xffffffffffffffffULL, 1  )
TEST_SRL( 9,  0xffffffffffffffffULL, 7  )
TEST_SRL( 10, 0xffffffffffffffffULL, 14 )
TEST_SRL( 11, 0xffffffffffffffffULL, 31 )
TEST_SRL( 12, 0x0000000021212121ULL, 0  )
TEST_SRL( 13, 0x0000000021212121ULL, 1  )
TEST_SRL( 14, 0x0000000021212121ULL, 7  )
TEST_SRL( 15, 0x0000000021212121ULL, 14 )
TEST_SRL( 16, 0x0000000021212121ULL, 31 )
TEST_RR_OP( 17, srl, 0x0000000021212121, 0x0000000021212121, 0xffffffffffffffc0 )
TEST_RR_OP( 18, srl, 0x0000000010909090, 0x0000000021212121, 0xffffffffffffffc1 )
TEST_RR_OP( 19, srl, 0x0000000000424242, 0x0000000021212121, 0xffffffffffffffc7 )
TEST_RR_OP( 20, srl, 0x0000000000008484, 0x0000000021212121, 0xffffffffffffffce )
TEST_RR_OP( 21, srl, 0x0000000000000000, 0x0000000021212121, 0xffffffffffffffff )
TEST_RR_SRC1_EQ_DEST( 22, srl, 0x01000000, 0x80000000, 7  )
TEST_RR_SRC2_EQ_DEST( 23, srl, 0x00020000, 0x80000000, 14 )
TEST_RR_SRC12_EQ_DEST( 24, srl, 0, 7 )
TEST_RR_DEST_BYPASS( 25, 0, srl, 0x01000000, 0x80000000, 7  )
TEST_RR_DEST_BYPASS( 26, 1, srl, 0x00020000, 0x80000000, 14 )
TEST_RR_DEST_BYPASS( 27, 2, srl, 0x00000001, 0x80000000, 31 )
TEST_RR_SRC12_BYPASS( 28, 0, 0, srl, 0x01000000, 0x80000000, 7  )
TEST_RR_SRC12_BYPASS( 29, 0, 1, srl, 0x00020000, 0x80000000, 14 )
TEST_RR_SRC12_BYPASS( 30, 0, 2, srl, 0x00000001, 0x80000000, 31 )
TEST_RR_SRC12_BYPASS( 31, 1, 0, srl, 0x01000000, 0x80000000, 7  )
TEST_RR_SRC12_BYPASS( 32, 1, 1, srl, 0x00020000, 0x80000000, 14 )
TEST_RR_SRC12_BYPASS( 33, 2, 0, srl, 0x00000001, 0x80000000, 31 )
TEST_RR_SRC21_BYPASS( 34, 0, 0, srl, 0x01000000, 0x80000000, 7  )
TEST_RR_SRC21_BYPASS( 35, 0, 1, srl, 0x00020000, 0x80000000, 14 )
TEST_RR_SRC21_BYPASS( 36, 0, 2, srl, 0x00000001, 0x80000000, 31 )
TEST_RR_SRC21_BYPASS( 37, 1, 0, srl, 0x01000000, 0x80000000, 7  )
TEST_RR_SRC21_BYPASS( 38, 1, 1, srl, 0x00020000, 0x80000000, 14 )
TEST_RR_SRC21_BYPASS( 39, 2, 0, srl, 0x00000001, 0x80000000, 31 )
TEST_RR_ZEROSRC1( 40, srl, 0, 15 )
TEST_RR_ZEROSRC2( 41, srl, 32, 32 )
TEST_RR_ZEROSRC12( 42, srl, 0 )
TEST_RR_ZERODEST( 43, srl, 1024, 2048 )
TEST_RR_OP( 2,  srlw, 0xffffffff80000000, 0xffffffff80000000, 0  )
TEST_RR_OP( 3,  srlw, 0x0000000040000000, 0xffffffff80000000, 1  )
TEST_RR_OP( 4,  srlw, 0x0000000001000000, 0xffffffff80000000, 7  )
TEST_RR_OP( 5,  srlw, 0x0000000000020000, 0xffffffff80000000, 14 )
TEST_RR_OP( 6,  srlw, 0x0000000000000001, 0xffffffff80000001, 31 )
TEST_RR_OP( 7,  srlw, 0xffffffffffffffff, 0xffffffffffffffff, 0  )
TEST_RR_OP( 8,  srlw, 0x000000007fffffff, 0xffffffffffffffff, 1  )
TEST_RR_OP( 9,  srlw, 0x0000000001ffffff, 0xffffffffffffffff, 7  )
TEST_RR_OP( 10, srlw, 0x000000000003ffff, 0xffffffffffffffff, 14 )
TEST_RR_OP( 11, srlw, 0x0000000000000001, 0xffffffffffffffff, 31 )
TEST_RR_OP( 12, srlw, 0x0000000021212121, 0x0000000021212121, 0  )
TEST_RR_OP( 13, srlw, 0x0000000010909090, 0x0000000021212121, 1  )
TEST_RR_OP( 14, srlw, 0x0000000000424242, 0x0000000021212121, 7  )
TEST_RR_OP( 15, srlw, 0x0000000000008484, 0x0000000021212121, 14 )
TEST_RR_OP( 16, srlw, 0x0000000000000000, 0x0000000021212121, 31 )
TEST_RR_OP( 17, srlw, 0x0000000021212121, 0x0000000021212121, 0xffffffffffffffe0 )
TEST_RR_OP( 18, srlw, 0x0000000010909090, 0x0000000021212121, 0xffffffffffffffe1 )
TEST_RR_OP( 19, srlw, 0x0000000000424242, 0x0000000021212121, 0xffffffffffffffe7 )
TEST_RR_OP( 20, srlw, 0x0000000000008484, 0x0000000021212121, 0xffffffffffffffee )
TEST_RR_OP( 21, srlw, 0x0000000000000000, 0x0000000021212121, 0xffffffffffffffff )
TEST_RR_OP( 44, srlw, 0x0000000012345678, 0xffffffff12345678, 0 )
TEST_RR_OP( 45, srlw, 0x0000000001234567, 0xffffffff12345678, 4 )
TEST_RR_OP( 46, srlw, 0xffffffff92345678, 0x0000000092345678, 0 )
TEST_RR_OP( 47, srlw, 0x0000000009234567, 0x0000000092345678, 4 )
TEST_RR_SRC1_EQ_DEST( 22, srlw, 0x0000000001000000, 0xffffffff80000000, 7  )
TEST_RR_SRC2_EQ_DEST( 23, srlw, 0x0000000000020000, 0xffffffff80000000, 14 )
TEST_RR_SRC12_EQ_DEST( 24, srlw, 0, 7 )
TEST_RR_DEST_BYPASS( 25, 0, srlw, 0x0000000001000000, 0xffffffff80000000, 7  )
TEST_RR_DEST_BYPASS( 26, 1, srlw, 0x0000000000020000, 0xffffffff80000000, 14 )
TEST_RR_DEST_BYPASS( 27, 2, srlw, 0x0000000000000001, 0xffffffff80000000, 31 )
TEST_RR_SRC12_BYPASS( 28, 0, 0, srlw, 0x0000000001000000, 0xffffffff80000000, 7  )
TEST_RR_SRC12_BYPASS( 29, 0, 1, srlw, 0x0000000000020000, 0xffffffff80000000, 14 )
TEST_RR_SRC12_BYPASS( 30, 0, 2, srlw, 0x0000000000000001, 0xffffffff80000000, 31 )
TEST_RR_SRC12_BYPASS( 31, 1, 0, srlw, 0x0000000001000000, 0xffffffff80000000, 7  )
TEST_RR_SRC12_BYPASS( 32, 1, 1, srlw, 0x0000000000020000, 0xffffffff80000000, 14 )
TEST_RR_SRC12_BYPASS( 33, 2, 0, srlw, 0x0000000000000001, 0xffffffff80000000, 31 )
TEST_RR_SRC21_BYPASS( 34, 0, 0, srlw, 0x0000000001000000, 0xffffffff80000000, 7  )
TEST_RR_SRC21_BYPASS( 35, 0, 1, srlw, 0x0000000000020000, 0xffffffff80000000, 14 )
TEST_RR_SRC21_BYPASS( 36, 0, 2, srlw, 0x0000000000000001, 0xffffffff80000000, 31 )
TEST_RR_SRC21_BYPASS( 37, 1, 0, srlw, 0x0000000001000000, 0xffffffff80000000, 7  )
TEST_RR_SRC21_BYPASS( 38, 1, 1, srlw, 0x0000000000020000, 0xffffffff80000000, 14 )
TEST_RR_SRC21_BYPASS( 39, 2, 0, srlw, 0x0000000000000001, 0xffffffff80000000, 31 )
TEST_RR_ZEROSRC1( 40, srlw, 0, 15 )
TEST_RR_ZEROSRC2( 41, srlw, 32, 32 )
TEST_RR_ZEROSRC12( 42, srlw, 0 )
TEST_RR_ZERODEST( 43, srlw, 1024, 2048 )
TEST_RR_OP( 2,  sub, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000 )
TEST_RR_OP( 3,  sub, 0x0000000000000000, 0x0000000000000001, 0x0000000000000001 )
TEST_RR_OP( 4,  sub, 0xfffffffffffffffc, 0x0000000000000003, 0x0000000000000007 )
TEST_RR_OP( 5,  sub, 0x0000000000008000, 0x0000000000000000, 0xffffffffffff8000 )
TEST_RR_OP( 6,  sub, 0xffffffff80000000, 0xffffffff80000000, 0x0000000000000000 )
TEST_RR_OP( 7,  sub, 0xffffffff80008000, 0xffffffff80000000, 0xffffffffffff8000 )
TEST_RR_OP( 8,  sub, 0xffffffffffff8001, 0x0000000000000000, 0x0000000000007fff )
TEST_RR_OP( 9,  sub, 0x000000007fffffff, 0x000000007fffffff, 0x0000000000000000 )
TEST_RR_OP( 10, sub, 0x000000007fff8000, 0x000000007fffffff, 0x0000000000007fff )
TEST_RR_OP( 11, sub, 0xffffffff7fff8001, 0xffffffff80000000, 0x0000000000007fff )
TEST_RR_OP( 12, sub, 0x0000000080007fff, 0x000000007fffffff, 0xffffffffffff8000 )
TEST_RR_OP( 13, sub, 0x0000000000000001, 0x0000000000000000, 0xffffffffffffffff )
TEST_RR_OP( 14, sub, 0xfffffffffffffffe, 0xffffffffffffffff, 0x0000000000000001 )
TEST_RR_OP( 15, sub, 0x0000000000000000, 0xffffffffffffffff, 0xffffffffffffffff )
TEST_RR_SRC1_EQ_DEST( 16, sub, 2, 13, 11 )
TEST_RR_SRC2_EQ_DEST( 17, sub, 3, 14, 11 )
TEST_RR_SRC12_EQ_DEST( 18, sub, 0, 13 )
TEST_RR_DEST_BYPASS( 19, 0, sub, 2, 13, 11 )
TEST_RR_DEST_BYPASS( 20, 1, sub, 3, 14, 11 )
TEST_RR_DEST_BYPASS( 21, 2, sub, 4, 15, 11 )
TEST_RR_SRC12_BYPASS( 22, 0, 0, sub, 2, 13, 11 )
TEST_RR_SRC12_BYPASS( 23, 0, 1, sub, 3, 14, 11 )
TEST_RR_SRC12_BYPASS( 24, 0, 2, sub, 4, 15, 11 )
TEST_RR_SRC12_BYPASS( 25, 1, 0, sub, 2, 13, 11 )
TEST_RR_SRC12_BYPASS( 26, 1, 1, sub, 3, 14, 11 )
TEST_RR_SRC12_BYPASS( 27, 2, 0, sub, 4, 15, 11 )
TEST_RR_SRC21_BYPASS( 28, 0, 0, sub, 2, 13, 11 )
TEST_RR_SRC21_BYPASS( 29, 0, 1, sub, 3, 14, 11 )
TEST_RR_SRC21_BYPASS( 30, 0, 2, sub, 4, 15, 11 )
TEST_RR_SRC21_BYPASS( 31, 1, 0, sub, 2, 13, 11 )
TEST_RR_SRC21_BYPASS( 32, 1, 1, sub, 3, 14, 11 )
TEST_RR_SRC21_BYPASS( 33, 2, 0, sub, 4, 15, 11 )
TEST_RR_ZEROSRC1( 34, sub, 15, -15 )
TEST_RR_ZEROSRC2( 35, sub, 32, 32 )
TEST_RR_ZEROSRC12( 36, sub, 0 )
TEST_RR_ZERODEST( 37, sub, 16, 30 )
TEST_RR_OP( 2,  subw, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000 )
TEST_RR_OP( 3,  subw, 0x0000000000000000, 0x0000000000000001, 0x0000000000000001 )
TEST_RR_OP( 4,  subw, 0xfffffffffffffffc, 0x0000000000000003, 0x0000000000000007 )
TEST_RR_OP( 5,  subw, 0x0000000000008000, 0x0000000000000000, 0xffffffffffff8000 )
TEST_RR_OP( 6,  subw, 0xffffffff80000000, 0xffffffff80000000, 0x0000000000000000 )
TEST_RR_OP( 7,  subw, 0xffffffff80008000, 0xffffffff80000000, 0xffffffffffff8000 )
TEST_RR_OP( 8,  subw, 0xffffffffffff8001, 0x0000000000000000, 0x0000000000007fff )
TEST_RR_OP( 9,  subw, 0x000000007fffffff, 0x000000007fffffff, 0x0000000000000000 )
TEST_RR_OP( 10, subw, 0x000000007fff8000, 0x000000007fffffff, 0x0000000000007fff )
TEST_RR_OP( 11, subw, 0x000000007fff8001, 0xffffffff80000000, 0x0000000000007fff )
TEST_RR_OP( 12, subw, 0xffffffff80007fff, 0x000000007fffffff, 0xffffffffffff8000 )
TEST_RR_OP( 13, subw, 0x0000000000000001, 0x0000000000000000, 0xffffffffffffffff )
TEST_RR_OP( 14, subw, 0xfffffffffffffffe, 0xffffffffffffffff, 0x0000000000000001 )
TEST_RR_OP( 15, subw, 0x0000000000000000, 0xffffffffffffffff, 0xffffffffffffffff )
TEST_RR_SRC1_EQ_DEST( 16, subw, 2, 13, 11 )
TEST_RR_SRC2_EQ_DEST( 17, subw, 3, 14, 11 )
TEST_RR_SRC12_EQ_DEST( 18, subw, 0, 13 )
TEST_RR_DEST_BYPASS( 19, 0, subw, 2, 13, 11 )
TEST_RR_DEST_BYPASS( 20, 1, subw, 3, 14, 11 )
TEST_RR_DEST_BYPASS( 21, 2, subw, 4, 15, 11 )
TEST_RR_SRC12_BYPASS( 22, 0, 0, subw, 2, 13, 11 )
TEST_RR_SRC12_BYPASS( 23, 0, 1, subw, 3, 14, 11 )
TEST_RR_SRC12_BYPASS( 24, 0, 2, subw, 4, 15, 11 )
TEST_RR_SRC12_BYPASS( 25, 1, 0, subw, 2, 13, 11 )
TEST_RR_SRC12_BYPASS( 26, 1, 1, subw, 3, 14, 11 )
TEST_RR_SRC12_BYPASS( 27, 2, 0, subw, 4, 15, 11 )
TEST_RR_SRC21_BYPASS( 28, 0, 0, subw, 2, 13, 11 )
TEST_RR_SRC21_BYPASS( 29, 0, 1, subw, 3, 14, 11 )
TEST_RR_SRC21_BYPASS( 30, 0, 2, subw, 4, 15, 11 )
TEST_RR_SRC21_BYPASS( 31, 1, 0, subw, 2, 13, 11 )
TEST_RR_SRC21_BYPASS( 32, 1, 1, subw, 3, 14, 11 )
TEST_RR_SRC21_BYPASS( 33, 2, 0, subw, 4, 15, 11 )
TEST_RR_ZEROSRC1( 34, subw, 15, -15 )
TEST_RR_ZEROSRC2( 35, subw, 32, 32 )
TEST_RR_ZEROSRC12( 36, subw, 0 )
TEST_RR_ZERODEST( 37, subw, 16, 30 )
TEST_ST_OP( 2, lw, sw, 0x0000000000aa00aa, 0,  tdat )
TEST_ST_OP( 3, lw, sw, 0xffffffffaa00aa00, 4,  tdat )
TEST_ST_OP( 4, lw, sw, 0x000000000aa00aa0, 8,  tdat )
TEST_ST_OP( 5, lw, sw, 0xffffffffa00aa00a, 12, tdat )
TEST_ST_OP( 6, lw, sw, 0x0000000000aa00aa, -12, tdat8 )
TEST_ST_OP( 7, lw, sw, 0xffffffffaa00aa00, -8,  tdat8 )
TEST_ST_OP( 8, lw, sw, 0x000000000aa00aa0, -4,  tdat8 )
TEST_ST_OP( 9, lw, sw, 0xffffffffa00aa00a, 0,   tdat8 )
TEST_ST_SRC12_BYPASS( 12, 0, 0, lw, sw, 0xffffffffaabbccdd, 0,  tdat )
TEST_ST_SRC12_BYPASS( 13, 0, 1, lw, sw, 0xffffffffdaabbccd, 4,  tdat )
TEST_ST_SRC12_BYPASS( 14, 0, 2, lw, sw, 0xffffffffddaabbcc, 8,  tdat )
TEST_ST_SRC12_BYPASS( 15, 1, 0, lw, sw, 0xffffffffcddaabbc, 12, tdat )
TEST_ST_SRC12_BYPASS( 16, 1, 1, lw, sw, 0xffffffffccddaabb, 16, tdat )
TEST_ST_SRC12_BYPASS( 17, 2, 0, lw, sw, 0xffffffffbccddaab, 20, tdat )
TEST_ST_SRC21_BYPASS( 18, 0, 0, lw, sw, 0x00112233, 0,  tdat )
TEST_ST_SRC21_BYPASS( 19, 0, 1, lw, sw, 0x30011223, 4,  tdat )
TEST_ST_SRC21_BYPASS( 20, 0, 2, lw, sw, 0x33001122, 8,  tdat )
TEST_ST_SRC21_BYPASS( 21, 1, 0, lw, sw, 0x23300112, 12, tdat )
TEST_ST_SRC21_BYPASS( 22, 1, 1, lw, sw, 0x22330011, 16, tdat )
TEST_ST_SRC21_BYPASS( 23, 2, 0, lw, sw, 0x12233001, 20, tdat )
TEST_IMM_OP( 2, xori, 0xffffffffff00f00f, 0x0000000000ff0f00, 0xf0f )
TEST_IMM_OP( 3, xori, 0x000000000ff00f00, 0x000000000ff00ff0, 0x0f0 )
TEST_IMM_OP( 4, xori, 0x0000000000ff0ff0, 0x0000000000ff08ff, 0x70f )
TEST_IMM_OP( 5, xori, 0xfffffffff00ff0ff, 0xfffffffff00ff00f, 0x0f0 )
TEST_IMM_SRC1_EQ_DEST( 6, xori, 0xffffffffff00f00f, 0xffffffffff00f700, 0x70f )
TEST_IMM_DEST_BYPASS( 7,  0, xori, 0x000000000ff00f00, 0x000000000ff00ff0, 0x0f0 )
TEST_IMM_DEST_BYPASS( 8,  1, xori, 0x0000000000ff0ff0, 0x0000000000ff08ff, 0x70f )
TEST_IMM_DEST_BYPASS( 9,  2, xori, 0xfffffffff00ff0ff, 0xfffffffff00ff00f, 0x0f0 )
TEST_IMM_SRC1_BYPASS( 10, 0, xori, 0x000000000ff00f00, 0x000000000ff00ff0, 0x0f0 )
TEST_IMM_SRC1_BYPASS( 11, 1, xori, 0x0000000000ff0ff0, 0x0000000000ff0fff, 0x00f )
TEST_IMM_SRC1_BYPASS( 12, 2, xori, 0xfffffffff00ff0ff, 0xfffffffff00ff00f, 0x0f0 )
TEST_IMM_ZEROSRC1( 13, xori, 0x0f0, 0x0f0 )
TEST_IMM_ZERODEST( 14, xori, 0x00ff00ff, 0x70f )
TEST_RR_OP( 2, xor, 0xf00ff00f, 0xff00ff00, 0x0f0f0f0f )
TEST_RR_OP( 3, xor, 0xff00ff00, 0x0ff00ff0, 0xf0f0f0f0 )
TEST_RR_OP( 4, xor, 0x0ff00ff0, 0x00ff00ff, 0x0f0f0f0f )
TEST_RR_OP( 5, xor, 0x00ff00ff, 0xf00ff00f, 0xf0f0f0f0 )
TEST_RR_SRC1_EQ_DEST( 6, xor, 0xf00ff00f, 0xff00ff00, 0x0f0f0f0f )
TEST_RR_SRC2_EQ_DEST( 7, xor, 0xf00ff00f, 0xff00ff00, 0x0f0f0f0f )
TEST_RR_SRC12_EQ_DEST( 8, xor, 0x00000000, 0xff00ff00 )
TEST_RR_DEST_BYPASS( 9,  0, xor, 0xf00ff00f, 0xff00ff00, 0x0f0f0f0f )
TEST_RR_DEST_BYPASS( 10, 1, xor, 0xff00ff00, 0x0ff00ff0, 0xf0f0f0f0 )
TEST_RR_DEST_BYPASS( 11, 2, xor, 0x0ff00ff0, 0x00ff00ff, 0x0f0f0f0f )
TEST_RR_SRC12_BYPASS( 12, 0, 0, xor, 0xf00ff00f, 0xff00ff00, 0x0f0f0f0f )
TEST_RR_SRC12_BYPASS( 13, 0, 1, xor, 0xff00ff00, 0x0ff00ff0, 0xf0f0f0f0 )
TEST_RR_SRC12_BYPASS( 14, 0, 2, xor, 0x0ff00ff0, 0x00ff00ff, 0x0f0f0f0f )
TEST_RR_SRC12_BYPASS( 15, 1, 0, xor, 0xf00ff00f, 0xff00ff00, 0x0f0f0f0f )
TEST_RR_SRC12_BYPASS( 16, 1, 1, xor, 0xff00ff00, 0x0ff00ff0, 0xf0f0f0f0 )
TEST_RR_SRC12_BYPASS( 17, 2, 0, xor, 0x0ff00ff0, 0x00ff00ff, 0x0f0f0f0f )
TEST_RR_SRC21_BYPASS( 18, 0, 0, xor, 0xf00ff00f, 0xff00ff00, 0x0f0f0f0f )
TEST_RR_SRC21_BYPASS( 19, 0, 1, xor, 0xff00ff00, 0x0ff00ff0, 0xf0f0f0f0 )
TEST_RR_SRC21_BYPASS( 20, 0, 2, xor, 0x0ff00ff0, 0x00ff00ff, 0x0f0f0f0f )
TEST_RR_SRC21_BYPASS( 21, 1, 0, xor, 0xf00ff00f, 0xff00ff00, 0x0f0f0f0f )
TEST_RR_SRC21_BYPASS( 22, 1, 1, xor, 0xff00ff00, 0x0ff00ff0, 0xf0f0f0f0 )
TEST_RR_SRC21_BYPASS( 23, 2, 0, xor, 0x0ff00ff0, 0x00ff00ff, 0x0f0f0f0f )
TEST_RR_ZEROSRC1( 24, xor, 0xff00ff00, 0xff00ff00 )
TEST_RR_ZEROSRC2( 25, xor, 0x00ff00ff, 0x00ff00ff )
TEST_RR_ZEROSRC12( 26, xor, 0 )
TEST_RR_ZERODEST( 27, xor, 0x11111111, 0x22222222 )
TEST_RR_OP(32,  mul, 0x0000000000001200, 0x0000000000007e00, 0x6db6db6db6db6db7 )
TEST_RR_OP(33,  mul, 0x0000000000001240, 0x0000000000007fc0, 0x6db6db6db6db6db7 )
TEST_RR_OP( 2,  mul, 0x00000000, 0x00000000, 0x00000000 )
TEST_RR_OP( 3,  mul, 0x00000001, 0x00000001, 0x00000001 )
TEST_RR_OP( 4,  mul, 0x00000015, 0x00000003, 0x00000007 )
TEST_RR_OP( 5,  mul, 0x0000000000000000, 0x0000000000000000, 0xffffffffffff8000 )
TEST_RR_OP( 6,  mul, 0x0000000000000000, 0xffffffff80000000, 0x00000000 )
TEST_RR_OP( 7,  mul, 0x0000400000000000, 0xffffffff80000000, 0xffffffffffff8000 )
TEST_RR_OP(30,  mul, 0x000000000000ff7f, 0xaaaaaaaaaaaaaaab, 0x000000000002fe7d )
TEST_RR_OP(31,  mul, 0x000000000000ff7f, 0x000000000002fe7d, 0xaaaaaaaaaaaaaaab )
TEST_RR_SRC1_EQ_DEST( 8, mul, 143, 13, 11 )
TEST_RR_SRC2_EQ_DEST( 9, mul, 154, 14, 11 )
TEST_RR_SRC12_EQ_DEST( 10, mul, 169, 13 )
TEST_RR_DEST_BYPASS( 11, 0, mul, 143, 13, 11 )
TEST_RR_DEST_BYPASS( 12, 1, mul, 154, 14, 11 )
TEST_RR_DEST_BYPASS( 13, 2, mul, 165, 15, 11 )
TEST_RR_SRC12_BYPASS( 14, 0, 0, mul, 143, 13, 11 )
TEST_RR_SRC12_BYPASS( 15, 0, 1, mul, 154, 14, 11 )
TEST_RR_SRC12_BYPASS( 16, 0, 2, mul, 165, 15, 11 )
TEST_RR_SRC12_BYPASS( 17, 1, 0, mul, 143, 13, 11 )
TEST_RR_SRC12_BYPASS( 18, 1, 1, mul, 154, 14, 11 )
TEST_RR_SRC12_BYPASS( 19, 2, 0, mul, 165, 15, 11 )
TEST_RR_SRC21_BYPASS( 20, 0, 0, mul, 143, 13, 11 )
TEST_RR_SRC21_BYPASS( 21, 0, 1, mul, 154, 14, 11 )
TEST_RR_SRC21_BYPASS( 22, 0, 2, mul, 165, 15, 11 )
TEST_RR_SRC21_BYPASS( 23, 1, 0, mul, 143, 13, 11 )
TEST_RR_SRC21_BYPASS( 24, 1, 1, mul, 154, 14, 11 )
TEST_RR_SRC21_BYPASS( 25, 2, 0, mul, 165, 15, 11 )
TEST_RR_ZEROSRC1( 26, mul, 0, 31 )
TEST_RR_ZEROSRC2( 27, mul, 0, 32 )
TEST_RR_ZEROSRC12( 28, mul, 0 )
TEST_RR_ZERODEST( 29, mul, 33, 34 )
TEST_RR_OP( 2,  mulh, 0x00000000, 0x00000000, 0x00000000 )
TEST_RR_OP( 3,  mulh, 0x00000000, 0x00000001, 0x00000001 )
TEST_RR_OP( 4,  mulh, 0x00000000, 0x00000003, 0x00000007 )
TEST_RR_OP( 5,  mulh, 0x0000000000000000, 0x0000000000000000, 0xffffffffffff8000 )
TEST_RR_OP( 6,  mulh, 0x0000000000000000, 0xffffffff80000000, 0x00000000 )
TEST_RR_OP( 7,  mulh, 0x0000000000000000, 0xffffffff80000000, 0xffffffffffff8000 )
TEST_RR_SRC1_EQ_DEST( 8, mulh, 143, 13ULL<<32, 11ULL<<32 )
TEST_RR_SRC2_EQ_DEST( 9, mulh, 154, 14ULL<<32, 11ULL<<32 )
TEST_RR_SRC12_EQ_DEST( 10, mulh, 169, 13ULL<<32 )
TEST_RR_DEST_BYPASS( 11, 0, mulh, 143, 13ULL<<32, 11ULL<<32 )
TEST_RR_DEST_BYPASS( 12, 1, mulh, 154, 14ULL<<32, 11ULL<<32 )
TEST_RR_DEST_BYPASS( 13, 2, mulh, 165, 15ULL<<32, 11ULL<<32 )
TEST_RR_SRC12_BYPASS( 14, 0, 0, mulh, 143, 13ULL<<32, 11ULL<<32 )
TEST_RR_SRC12_BYPASS( 15, 0, 1, mulh, 154, 14ULL<<32, 11ULL<<32 )
TEST_RR_SRC12_BYPASS( 16, 0, 2, mulh, 165, 15ULL<<32, 11ULL<<32 )
TEST_RR_SRC12_BYPASS( 17, 1, 0, mulh, 143, 13ULL<<32, 11ULL<<32 )
TEST_RR_SRC12_BYPASS( 18, 1, 1, mulh, 154, 14ULL<<32, 11ULL<<32 )
TEST_RR_SRC12_BYPASS( 19, 2, 0, mulh, 165, 15ULL<<32, 11ULL<<32 )
TEST_RR_SRC21_BYPASS( 20, 0, 0, mulh, 143, 13ULL<<32, 11ULL<<32 )
TEST_RR_SRC21_BYPASS( 21, 0, 1, mulh, 154, 14ULL<<32, 11ULL<<32 )
TEST_RR_SRC21_BYPASS( 22, 0, 2, mulh, 165, 15ULL<<32, 11ULL<<32 )
TEST_RR_SRC21_BYPASS( 23, 1, 0, mulh, 143, 13ULL<<32, 11ULL<<32 )
TEST_RR_SRC21_BYPASS( 24, 1, 1, mulh, 154, 14ULL<<32, 11ULL<<32 )
TEST_RR_SRC21_BYPASS( 25, 2, 0, mulh, 165, 15ULL<<32, 11ULL<<32 )
TEST_RR_ZEROSRC1( 26, mulh, 0, 31ULL<<32 )
TEST_RR_ZEROSRC2( 27, mulh, 0, 32ULL<<32 )
TEST_RR_ZEROSRC12( 28, mulh, 0 )
TEST_RR_ZERODEST( 29, mulh, 33ULL<<32, 34ULL<<32 )
TEST_RR_OP( 2,  mulhu, 0x00000000, 0x00000000, 0x00000000 )
TEST_RR_OP( 3,  mulhu, 0x00000000, 0x00000001, 0x00000001 )
TEST_RR_OP( 4,  mulhu, 0x00000000, 0x00000003, 0x00000007 )
TEST_RR_OP( 5,  mulhu, 0x0000000000000000, 0x0000000000000000, 0xffffffffffff8000 )
TEST_RR_OP( 6,  mulhu, 0x0000000000000000, 0xffffffff80000000, 0x00000000 )
TEST_RR_OP( 7,  mulhu, 0xffffffff7fff8000, 0xffffffff80000000, 0xffffffffffff8000 )
TEST_RR_OP(30,  mulhu, 0x000000000001fefe, 0xaaaaaaaaaaaaaaab, 0x000000000002fe7d )
TEST_RR_OP(31,  mulhu, 0x000000000001fefe, 0x000000000002fe7d, 0xaaaaaaaaaaaaaaab )
TEST_RR_SRC1_EQ_DEST( 8, mulhu, 143, 13ULL<<32, 11ULL<<32 )
TEST_RR_SRC2_EQ_DEST( 9, mulhu, 154, 14ULL<<32, 11ULL<<32 )
TEST_RR_SRC12_EQ_DEST( 10, mulhu, 169, 13ULL<<32 )
TEST_RR_DEST_BYPASS( 11, 0, mulhu, 143, 13ULL<<32, 11ULL<<32 )
TEST_RR_DEST_BYPASS( 12, 1, mulhu, 154, 14ULL<<32, 11ULL<<32 )
TEST_RR_DEST_BYPASS( 13, 2, mulhu, 165, 15ULL<<32, 11ULL<<32 )
TEST_RR_SRC12_BYPASS( 14, 0, 0, mulhu, 143, 13ULL<<32, 11ULL<<32 )
TEST_RR_SRC12_BYPASS( 15, 0, 1, mulhu, 154, 14ULL<<32, 11ULL<<32 )
TEST_RR_SRC12_BYPASS( 16, 0, 2, mulhu, 165, 15ULL<<32, 11ULL<<32 )
TEST_RR_SRC12_BYPASS( 17, 1, 0, mulhu, 143, 13ULL<<32, 11ULL<<32 )
TEST_RR_SRC12_BYPASS( 18, 1, 1, mulhu, 154, 14ULL<<32, 11ULL<<32 )
TEST_RR_SRC12_BYPASS( 19, 2, 0, mulhu, 165, 15ULL<<32, 11ULL<<32 )
TEST_RR_SRC21_BYPASS( 20, 0, 0, mulhu, 143, 13ULL<<32, 11ULL<<32 )
TEST_RR_SRC21_BYPASS( 21, 0, 1, mulhu, 154, 14ULL<<32, 11ULL<<32 )
TEST_RR_SRC21_BYPASS( 22, 0, 2, mulhu, 165, 15ULL<<32, 11ULL<<32 )
TEST_RR_SRC21_BYPASS( 23, 1, 0, mulhu, 143, 13ULL<<32, 11ULL<<32 )
TEST_RR_SRC21_BYPASS( 24, 1, 1, mulhu, 154, 14ULL<<32, 11ULL<<32 )
TEST_RR_SRC21_BYPASS( 25, 2, 0, mulhu, 165, 15ULL<<32, 11ULL<<32 )
TEST_RR_ZEROSRC1( 26, mulhu, 0, 31ULL<<32 )
TEST_RR_ZEROSRC2( 27, mulhu, 0, 32ULL<<32 )
TEST_RR_ZEROSRC12( 28, mulhu, 0 )
TEST_RR_ZERODEST( 29, mulhu, 33ULL<<32, 34ULL<<32 )
TEST_RR_OP( 2,  mulhsu, 0x00000000, 0x00000000, 0x00000000 )
TEST_RR_OP( 3,  mulhsu, 0x00000000, 0x00000001, 0x00000001 )
TEST_RR_OP( 4,  mulhsu, 0x00000000, 0x00000003, 0x00000007 )
TEST_RR_OP( 5,  mulhsu, 0x0000000000000000, 0x0000000000000000, 0xffffffffffff8000 )
TEST_RR_OP( 6,  mulhsu, 0x0000000000000000, 0xffffffff80000000, 0x00000000 )
TEST_RR_OP( 7,  mulhsu, 0xffffffff80000000, 0xffffffff80000000, 0xffffffffffff8000 )
TEST_RR_SRC1_EQ_DEST( 8, mulhsu, 143, 13ULL<<32, 11ULL<<32 )
TEST_RR_SRC2_EQ_DEST( 9, mulhsu, 154, 14ULL<<32, 11ULL<<32 )
TEST_RR_SRC12_EQ_DEST( 10, mulhsu, 169, 13ULL<<32 )
TEST_RR_DEST_BYPASS( 11, 0, mulhsu, 143, 13ULL<<32, 11ULL<<32 )
TEST_RR_DEST_BYPASS( 12, 1, mulhsu, 154, 14ULL<<32, 11ULL<<32 )
TEST_RR_DEST_BYPASS( 13, 2, mulhsu, 165, 15ULL<<32, 11ULL<<32 )
TEST_RR_SRC12_BYPASS( 14, 0, 0, mulhsu, 143, 13ULL<<32, 11ULL<<32 )
TEST_RR_SRC12_BYPASS( 15, 0, 1, mulhsu, 154, 14ULL<<32, 11ULL<<32 )
TEST_RR_SRC12_BYPASS( 16, 0, 2, mulhsu, 165, 15ULL<<32, 11ULL<<32 )
TEST_RR_SRC12_BYPASS( 17, 1, 0, mulhsu, 143, 13ULL<<32, 11ULL<<32 )
TEST_RR_SRC12_BYPASS( 18, 1, 1, mulhsu, 154, 14ULL<<32, 11ULL<<32 )
TEST_RR_SRC12_BYPASS( 19, 2, 0, mulhsu, 165, 15ULL<<32, 11ULL<<32 )
TEST_RR_SRC21_BYPASS( 20, 0, 0, mulhsu, 143, 13ULL<<32, 11ULL<<32 )
TEST_RR_SRC21_BYPASS( 21, 0, 1, mulhsu, 154, 14ULL<<32, 11ULL<<32 )
TEST_RR_SRC21_BYPASS( 22, 0, 2, mulhsu, 165, 15ULL<<32, 11ULL<<32 )
TEST_RR_SRC21_BYPASS( 23, 1, 0, mulhsu, 143, 13ULL<<32, 11ULL<<32 )
TEST_RR_SRC21_BYPASS( 24, 1, 1, mulhsu, 154, 14ULL<<32, 11ULL<<32 )
TEST_RR_SRC21_BYPASS( 25, 2, 0, mulhsu, 165, 15ULL<<32, 11ULL<<32 )
TEST_RR_ZEROSRC1( 26, mulhsu, 0, 31ULL<<32 )
TEST_RR_ZEROSRC2( 27, mulhsu, 0, 32ULL<<32 )
TEST_RR_ZEROSRC12( 28, mulhsu, 0 )
TEST_RR_ZERODEST( 29, mulhsu, 33ULL<<32, 34ULL<<32 )
TEST_RR_OP( 2, div,  3,  20,   6 )
TEST_RR_OP( 3, div, -3, -20,   6 )
TEST_RR_OP( 4, div, -3,  20,  -6 )
TEST_RR_OP( 5, div,  3, -20,  -6 )
TEST_RR_OP( 6, div, -1*1ULL<<63, -1*1ULL<<63,  1 )
TEST_RR_OP( 7, div, -1*1ULL<<63, -1*1ULL<<63, -1 )
TEST_RR_OP( 8, div, -1, -1*1ULL<<63, 0 )
TEST_RR_OP( 9, div, -1,      1, 0 )
TEST_RR_OP(10, div, -1,      0, 0 )
TEST_RR_OP( 2, divu,                   3,  20,   6 )
TEST_RR_OP( 3, divu, 3074457345618258599, -20,   6 )
TEST_RR_OP( 4, divu,                   0,  20,  -6 )
TEST_RR_OP( 5, divu,                   0, -20,  -6 )
TEST_RR_OP( 6, divu, -1*1ULL<<63, -1*1ULL<<63,  1 )
TEST_RR_OP( 7, divu,     0,  -1*1ULL<<63, -1 )
TEST_RR_OP( 8, divu, -1, -1*1ULL<<63, 0 )
TEST_RR_OP( 9, divu, -1,      1, 0 )
TEST_RR_OP(10, divu, -1,      0, 0 )
TEST_RR_OP( 2, rem,  2,  20,   6 )
TEST_RR_OP( 3, rem, -2, -20,   6 )
TEST_RR_OP( 4, rem,  2,  20,  -6 )
TEST_RR_OP( 5, rem, -2, -20,  -6 )
TEST_RR_OP( 6, rem,  0, -1*1ULL<<63,  1 )
TEST_RR_OP( 7, rem,  0, -1*1ULL<<63, -1 )
TEST_RR_OP( 8, rem, -1*1ULL<<63, -1*1ULL<<63, 0 )
TEST_RR_OP( 9, rem,      1,      1, 0 )
TEST_RR_OP(10, rem,      0,      0, 0 )
TEST_RR_OP( 2, remu,   2,  20,   6 )
TEST_RR_OP( 3, remu,   2, -20,   6 )
TEST_RR_OP( 4, remu,  20,  20,  -6 )
TEST_RR_OP( 5, remu, -20, -20,  -6 )
TEST_RR_OP( 6, remu,      0, -1*1ULL<<63,  1 )
TEST_RR_OP( 7, remu, -1*1ULL<<63, -1*1ULL<<63, -1 )
TEST_RR_OP( 8, remu, -1*1ULL<<63, -1*1ULL<<63, 0 )
TEST_RR_OP( 9, remu,      1,      1, 0 )
TEST_RR_OP(10, remu,      0,      0, 0 )
